@page "/senarai_arkib"
@attribute [Authorize]

@implements IDisposable

@using System.Globalization
@using Blazored.Toast.Services
@using Newtonsoft.Json
@using System.ComponentModel
@using PBTPro.DAL.Models;
@using PBTPro.Data
@using PBTPro.DAL.Models.CommonServices
@using PBTPro.DAL.Services

@inject ArchiveAuditService _audit
@inject RoleService _RoleService

@inject PBTAuthStateProvider _PBTAuthStateProvider
@inject IToastNotificationService ToastService
@inject NavigationManager NavigationManager
@inject IToastService toastService


<style>
    .dxbl-grid {
        height: 98.5%;
        max-height: 98.5%;
    }
</style>

<DxLoadingPanel @bind-Visible="PanelVisible"
                IsContentBlocked="true"
                ApplyBackgroundShading="true"
                IndicatorAreaVisible="false"
                Text="Capaian Data...">

    <div class="d-lg-flex border-bottom">
        <div class="col-md-12 py-1 dx-helptitle pageTitle">
            <img class="imgTitle" src="\images\icons-small\wrench-screwdriver.png" />
            <div class="textTitle">Log Audit - Senarai Arkib Log Audit</div>
        </div>
    </div>


<div class="item-container-x">

        <DxGrid @ref="Grid"
                Data="_lstAudits"
                KeyFieldName="archive_id"
                ShowGroupPanel="true"
                ShowFilterRow="false"
                TextWrapEnabled="true"
                CustomizeSummaryDisplayText="Grid_CustomizeSummaryDisplayText"
                EditorRenderMode="GridEditorRenderMode.Integrated"
                FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
                ShowSearchBox="true"
                AllowSelectRowByClick="false"
                @bind-SearchText="@GridSearchText"
                PageSize="25"
                @bind-PageIndex="@GridPageIndex"
                PagerPosition="GridPagerPosition.Bottom"
                PagerNavigationMode="PagerNavigationMode.InputBox"
                EditFormButtonsVisible="false"
                PageSizeSelectorVisible="true"
                PageSizeSelectorItems="@(new int[] { 25, 50, 100 })"
                PageSizeSelectorAllRowsItemVisible="true"
                PagerAutoHideNavButtons="false"
                ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
                GroupFooterDisplayMode="GridGroupFooterDisplayMode.Auto"
                HighlightRowOnHover="true"
                CssClass="mv-1000">

            <Columns>
                <DxGridDataColumn FieldName="created_at" Caption="Tarikh Dicipta" MinWidth="120" Width="13%" TextAlignment="GridTextAlignment.Center" DisplayFormat="dd/MM/yyyy" AllowGroup="false" />
                <DxGridDataColumn FieldName="archive_username" Caption="Nama Pengguna" MinWidth="150" Width="12%" TextAlignment="GridTextAlignment.Left" AllowGroup="true" />
                <DxGridDataColumn FieldName="role_id" Caption="Peranan" MinWidth="200" Width="30%" TextAlignment="GridTextAlignment.Left" AllowGroup="false">
                    <CellDisplayTemplate>
                        <div>@RoleName(((auditlog_archive_info)context.DataItem).role_id)</div>
                    </CellDisplayTemplate>
                </DxGridDataColumn>

                <DxGridDataColumn FieldName="archive_type" Caption="Jenis Maklumat" MinWidth="120" Width="12%" TextAlignment="GridTextAlignment.Center" AllowGroup="false">
                    <CellDisplayTemplate>
                            <div>@GetStatusAuditIconHtml(((auditlog_archive_info)context.DataItem).archive_type)</div>
                    </CellDisplayTemplate>
                </DxGridDataColumn>
                <DxGridDataColumn FieldName="archive_module_name" MinWidth="130" Width="13%" Caption="Nama Modul" TextAlignment="GridTextAlignment.Left" AllowGroup="true" />
                <DxGridDataColumn FieldName="archive_method" Caption="Method" MinWidth="200" Width="25%" TextAlignment="GridTextAlignment.Left" AllowGroup="true" />
                <DxGridDataColumn FieldName="archive_desc" Caption="Penerangan" MinWidth="200" Width="25%" TextAlignment="GridTextAlignment.Left" AllowGroup="false" />
            </Columns>

            <TotalSummary>
                <DxGridSummaryItem FooterColumnName="created_at"
                                   Name="Custom"
                                   SummaryType=GridSummaryItemType.Count />
            </TotalSummary>
    </DxGrid>

</div>
</DxLoadingPanel>


@code {
    bool PanelVisible { get; set; }
    private List<auditlog_archive_info> _lstAudits = new List<auditlog_archive_info>();
    auditlog_archive_info dtData { get; set; }
    IEnumerable<ApplicationRole> dtRole { get; set; }

    IGrid Grid { get; set; }
    int GridPageIndex { get; set; } = 0;
    string GridSearchText = "";

    GridColumnResizeMode ColumnResizeMode { get; set; } = GridColumnResizeMode.ColumnsContainer;
    TaskCompletionSource<bool> DataLoadedTcs { get; } = new(TaskCreationOptions.RunContinuationsAsynchronously);

    #region list
    protected override async Task OnInitializedAsync()
    {
        PanelVisible = true;
        _lstAudits = await _audit.GetAuditAsync();
        try
        {
            _lstAudits = await _audit.ListAll();
            dtRole = await _RoleService.ListAll();
            DataLoadedTcs.TrySetResult(true);
            PanelVisible = false;
        }
        catch (Exception ex)
        {
            PanelVisible = false;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await DataLoadedTcs.Task;
            await Grid.CancelEditAsync();
        }
    }

        void Grid_CustomizeSummaryDisplayText(GridCustomizeSummaryDisplayTextEventArgs e)
        {
        if (e.Item.Name == "Custom")
            e.DisplayText = string.Format("Bil. : {0}", e.Value);
        }
    #endregion

    #region lookup
    public MarkupString GetStatusAuditIconHtml(int? status)
    {
        string priorytyClass = "";
        string title = "";

        if (status == 2)
        {
            priorytyClass = "info";
            title = " INFORMASI ";
        }
        else if (status == 1)
        {
            priorytyClass = "danger";
            title = " RALAT ";
        }

        string html = string.Format("<span class='badge priority-{0} py-1 px-2' title='{1}'>{1}</span>", priorytyClass,
        title);
        return new MarkupString(html);
    }

    public MarkupString RoleName(int? roleid)
    {
        string rolename = "";
        foreach (var itm in dtRole)
        {
            if (roleid == itm.Id)
            {
                rolename = itm.Name;
            }
        }

        string html = string.Format("<span>{0}</span>", rolename);
        return new MarkupString(html);
    }
    #endregion

    public void Dispose()
    {
        DataLoadedTcs.TrySetCanceled();
    }

}
