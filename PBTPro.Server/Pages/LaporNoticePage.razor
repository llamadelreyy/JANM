@page "/lapor_notis"
@attribute [AllowAnonymous]

@using System.Globalization
@using PBTPro.Data
@using PBTPro.DAL.Models
@using PBTPro.DAL.Models.PayLoads

@inject NoticeService _NoticeService

@inject NavigationManager NavigationManager
@inject PBTAuthStateProvider _PBTAuthStateProvider
@inject IToastNotificationService ToastService
@inject PBTAuthPermissionService PermissionService
@inject RefTrnStatusService _RefTrnStatus
@inject RefNoticeDurationService _RefNoticeDuration

<style>
    .dxbl-grid {
        height: 79vh;
        max-height: 79vh;
    }

    .custom-grid .dxbl-grid-table > tbody > .dxbl-grid-empty-row {
        height: 10vh !important;
        min-height: 0px !important;
        display: none !important;
    }
</style>

@if (!PermissionService.HasPermission("View"))
{
    NavigationManager.NavigateTo("/no-permission");
}
else
{
    <DxLoadingPanel @bind-Visible="PanelVisible"
                    IsContentBlocked="true"
                    ApplyBackgroundShading="true"
                    IndicatorAreaVisible="false"
                    Text="Capaian Data...">

        <div class="d-lg-flex border-bottom mb-2">
            <div class="col-md-12 py-1 dx-helptitle pageTitle">
                <img class="imgTitle" src="/images/icons-small/document-template.png" />
                <div class="textTitle">Pelaporan - Laporan Notis</div>
            </div>
        </div>

        <div class="item-container-x">            
            <hr style="background-color:transparent; padding:0.5em 0;margin:auto;" />

            <DxGrid @ref="Grid"
                    Data="dtSource"
                    KeyFieldName="id_notis"
                    ShowGroupPanel="true"
                    ShowFilterRow="false"
                    CustomizeSummaryDisplayText="Grid_CustomizeSummaryDisplayText"
                    EditorRenderMode="GridEditorRenderMode.Integrated"
                    FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
                    ShowSearchBox="true"
                    AllowSelectRowByClick="true"
                    @bind-SearchText="@GridSearchText"
                    PageSize="25"
                    @bind-PageIndex="@GridPageIndex"
                    PagerPosition="GridPagerPosition.Bottom"
                    PagerNavigationMode="PagerNavigationMode.InputBox"
                    EditModelSaving="Grid_EditModelSaving"
                    EditFormButtonsVisible="false"
                    PageSizeSelectorVisible="true"
                    PageSizeSelectorItems="@(new int[] { 25, 50, 100 })"
                    PageSizeSelectorAllRowsItemVisible="true"
                    PagerAutoHideNavButtons="false"
                    ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
                    CustomizeElement="Grid_CustomizeElement"
                    HighlightRowOnHover="true"
                    CssClass="mv-1000">

                <Columns>
                    <DxGridCommandColumn Width="120px">
                        <HeaderTemplate>
                            <a @onclick="@(() => Grid.StartEditNewRowAsync())" style="text-decoration: none;" href="javascript:void(0);"><img src="images/icons/plus-circle.png" /></a>
                        </HeaderTemplate>
                        <CellDisplayTemplate>
                            @if (PermissionService.HasPermission("Edit"))
                            {
                                <a @onclick="@(() => Grid.StartEditRowAsync(context.VisibleIndex))" style="text-decoration: none; padding:0px 2px;" href="javascript:void(0);"><img src="images/icons-small/table--pencil.png" /></a>
                            }
                            @if (PermissionService.HasPermission("Delete"))
                            {
                                <a @onclick="@(() => Delete((trn_notices_view)context.DataItem))" style="text-decoration: none;padding-right:5px;" href="javascript:void(0);"><img src="images/icons-small/cross-circle-frame.png" /></a>
                            }
                            @if (PermissionService.HasPermission("Print"))
                            {
                                <a @onclick="@(() => OnSelectedRow(context.DataItem))" style="text-decoration: none;" href="javascript:void(0);" title="Muat turun laporan"><img src="images/icons-small/printer--pencil.png" /></a>
                            }
                        </CellDisplayTemplate>
                    </DxGridCommandColumn>
                    <DxGridDataColumn Caption="No Rujukan" MinWidth="130" Width="13%" FieldName="no_rujukan" AllowSort="true" />
                    <DxGridDataColumn Caption="No Lesen & Nama Perniagaan" MinWidth="200" Width="20%" FieldName="no_lesen">
                        <CellDisplayTemplate>
                            <div>
                                @CombineText(((trn_notices_view)context.DataItem).no_lesen, ((trn_notices_view)context.DataItem).nama_perniagaan)
                            </div>
                        </CellDisplayTemplate>
                    </DxGridDataColumn>
                    <DxGridDataColumn Caption="Nama Pemilik" MinWidth="200" Width="20%" FieldName="nama_pemilik" />
                    <DxGridDataColumn Caption="Nama Pegawai" MinWidth="200" Width="20%" FieldName="nama_pegawai" />
                    <DxGridDataColumn Caption="Tarikh Tamat & Tempoh Notis" MinWidth="150" Width="15%" FieldName="tarikh_tamat" AllowGroup="false" TextAlignment="GridTextAlignment.Center">
                        <CellDisplayTemplate>
                            <div>@GetTarikhTamatIconHtml(((trn_notices_view)context.DataItem).tarikh_tamat, ((trn_notices_view)context.DataItem).tempoh_notis, ((trn_notices_view)context.DataItem).tempoh_notis_id) </div>
                        </CellDisplayTemplate>
                    </DxGridDataColumn>
                    <DxGridDataColumn Caption="Status" MinWidth="150" Width="15%" FieldName="status_notis" TextAlignment="GridTextAlignment.Center">
                        <CellDisplayTemplate>
                            <div>@GetStatusNoticeIconHtml(((trn_notices_view)context.DataItem).status_notis, ((trn_notices_view)context.DataItem).status_notis_id)</div>
                        </CellDisplayTemplate>
                    </DxGridDataColumn>
                    @*  <DxGridDataColumn Caption="Tempoh Notis" MinWidth="200" Width="20%" FieldName="tempoh_notis">
                        <CellDisplayTemplate>
                            <div>
                                @CombineTempohText(((trn_notices_view)context.DataItem).TarikhData, ((trn_notices_view)context.DataItem).tempoh_notis)
                            </div>
                        </CellDisplayTemplate>
                    </DxGridDataColumn> *@
                    <DxGridDataColumn Caption="No Daftar Syarikat" MinWidth="150" Width="15%" FieldName="ssm_no" />
                    <DxGridDataColumn Caption="Alamat Perniagaan" MinWidth="250" Width="20%" FieldName="alamat_perniagaan" />
                    <DxGridDataColumn Caption="Akta Kesalahan" MinWidth="250" Width="25%" FieldName="akta_kesalahan"  />
                    <DxGridDataColumn Caption="Kod Kesalahan" MinWidth="250" Width="25%" FieldName="kod_kesalahan" />
                    <DxGridDataColumn Caption="Arahan" MinWidth="180" Width="18%" FieldName="arahan" />
                    <DxGridDataColumn Caption="Lokasi Kesalahan" MinWidth="120" Width="12%" FieldName="lokasi_kesalahan" />
                    <DxGridDataColumn Caption="Nama Saksi" MinWidth="200" Width="20%" FieldName="nama_saksi" />
                    <DxGridDataColumn Caption="Cara Serahan" MinWidth="150" Width="15%" FieldName="cara_serahan" />
                    <DxGridDataColumn FieldName="TarikhData"
                                      DisplayFormat="dd/MM/yyyy"
                                      Caption="Tarikh Data"
                                      MinWidth="120"
                                      Width="12%"
                                      TextAlignment="GridTextAlignment.Center"
                                      SortOrder="GridColumnSortOrder.Ascending"
                                      AllowSort="true"
                                      SortIndex="0" />
                </Columns>

                <EditFormTemplate Context="EditFormContext">
                    @{
                        var dtData = (trn_notices_view)EditFormContext.EditModel;
                        isTax = dtData.is_cukai;

                        string ssm_no = (!string.IsNullOrEmpty(dtData.ssm_no) ? dtData.ssm_no : "-");
                        string no_lesen = (!string.IsNullOrEmpty(dtData.no_lesen) ? dtData.no_lesen : "-");
                        string no_cukai = (!string.IsNullOrEmpty(dtData.no_cukai) ? dtData.no_cukai : "-");
                        string nama_perniagaan = (!string.IsNullOrEmpty(dtData.nama_perniagaan) ? dtData.nama_perniagaan : "-");
                        string nama_saksi = (!string.IsNullOrEmpty(dtData.nama_saksi) ? dtData.nama_saksi : "-");
                        string akta_kesalahan = (!string.IsNullOrEmpty(dtData.akta_kesalahan) ? dtData.akta_kesalahan : "-");
                        string kod_kesalahan = (!string.IsNullOrEmpty(dtData.kod_kesalahan) ? dtData.kod_kesalahan : "-");
                        string kod_seksyen = (!string.IsNullOrEmpty(dtData.kod_seksyen) ? dtData.kod_seksyen : "-");
                        string kod_uuk = (!string.IsNullOrEmpty(dtData.kod_uuk) ? dtData.kod_uuk : "-");
                        string nama_pemilik = (!string.IsNullOrEmpty(dtData.nama_pemilik) ? dtData.nama_pemilik : "-");
                        string alamat_perniagaan = (!string.IsNullOrEmpty(dtData.alamat_perniagaan) ? dtData.alamat_perniagaan : "-");
                    }
                    <DxFormLayout CssClass="w-100" style="padding:10px 20px;">
                        <DxFormLayoutItem ColSpanMd="4" BeginRow="true">
                            <table class="layout_edit">
                                <tr style="height:25px;">
                                    <td nowrap colspan="7" valign="top">
                                        #@dtData.no_rujukan &nbsp; @GetStatusNoticeIconHtml(dtData.status_notis, dtData.status_notis_id) <br />
                                    </td>
                                </tr>
                                <tr style="height:25px;">
                                    <td nowrap colspan="7" valign="top">
                                        @dtData.TarikhData
                                    </td>
                                </tr>
                                <tr style="height:5px;"><td colspan="7"></td></tr>
                                <tr style="height:1px;background-color:#ccc;"><td colspan="7"></td></tr>
                                <tr style="height:10px;"><td colspan="7"></td></tr>
                                <tr style="height:25px;">
                                    <td nowrap>No Lesen/Cukai</td>
                                    <td nowrap>&nbsp;&nbsp;</td>
                                    <td width="50%">
                                        @if (isTax)
                                            @no_cukai
                                        else
                                            @no_lesen
                                    </td>
                                    <td width="100px" nowrap>&nbsp;&nbsp;&nbsp;</td>
                                    <td nowrap>No Daftar Syarikat</td>
                                    <td nowrap>&nbsp;&nbsp;</td>
                                    <td width="50%">
                                        @ssm_no
                                    </td>
                                </tr>
                                <tr style="height:25px;">
                                    <td nowrap>Nama Pemilik</td>
                                    <td>&nbsp;&nbsp;</td>
                                    <td width="50%" colspan="7">
                                        @nama_pemilik
                                    </td>
                                </tr>
                                <tr style="height:25px;">
                                    <td nowrap>Nama Perniagaan</td>
                                    <td>&nbsp;&nbsp;</td>
                                    <td width="50%" colspan="5">
                                        @nama_perniagaan
                                    </td>
                                </tr>
                                <tr style="height:25px;">
                                    <td nowrap>Alamat Perniagaan</td>
                                    <td valign="top">&nbsp;&nbsp;</td>
                                    <td width="50%" colspan="7">
                                        @alamat_perniagaan
                                    </td>
                                </tr>
                                <tr style="height:10px;"><td colspan="7"></td></tr>
                                <tr style="height:1px;background-color:#ccc;"><td colspan="7"></td></tr>
                                <tr style="height:10px;"><td colspan="7"></td></tr>
                                <tr style="height:25px;">
                                    <td nowrap valign="top">Akta Kesalahan</td>
                                    <td valign="top">&nbsp;&nbsp;</td>
                                    <td width="50%" colspan="7" valign="top">
                                        @akta_kesalahan
                                    </td>
                                </tr>
                                <tr style="height:25px;">
                                    <td nowrap valign="top">Kod Kesalahan</td>
                                    <td valign="top">&nbsp;&nbsp;</td>
                                    <td width="50%" colspan="7" valign="top">
                                        @kod_kesalahan
                                    </td>
                                </tr>
                                <tr style="height:25px;">
                                    <td nowrap>Arahan</td>
                                    <td>&nbsp;&nbsp;</td>
                                    <td width="50%" colspan="7">
                                        @dtData.arahan
                                    </td>
                                </tr>
                                <tr style="height:25px;">
                                    <td nowrap>Lokasi Kesalahan</td>
                                    <td>&nbsp;&nbsp;</td>
                                    <td width="50%">
                                        @dtData.lokasi_kesalahan
                                    </td>
                                    <td width="100px" nowrap>&nbsp;&nbsp;&nbsp;</td>
                                    <td nowrap>Nama Pegawai</td>
                                    <td>&nbsp;&nbsp;</td>
                                    <td width="50%">
                                        @dtData.nama_pegawai
                                    </td>
                                </tr>
                                <tr style="height:25px;">
                                    <td nowrap>Nama Saksi</td>
                                    <td>&nbsp;&nbsp;</td>
                                    <td width="50%">
                                        @nama_saksi
                                    </td>
                                    <td width="100px" nowrap>&nbsp;&nbsp;&nbsp;</td>
                                    <td nowrap>Cara Serahan</td>
                                    <td>&nbsp;&nbsp;</td>
                                    <td width="50%">
                                        @dtData.cara_serahan
                                    </td>
                                </tr>
                                <tr style="height:10px;"><td colspan="7"></td></tr>
                                <tr style="height:1px;background-color:#ccc;"><td colspan="7"></td></tr>
                                <tr style="height:10px;"><td colspan="7"></td></tr>
                                <tr style="height:25px;">
                                    <td nowrap>Bukti</td>
                                    <td>&nbsp;&nbsp;</td>
                                    <td width="50%" colspan="5">
                                        @if (dtData.imej_notis != null && dtData.imej_notis.Any())
                                        {
                                            @foreach (var image in dtData.imej_notis)
                                            {
                                                <img src="@image" style="width:20%; border:1px solid #000; margin:5px;" />
                                            }
                                        }
                                        else
                                        {
                                            <img src="/images/Bukti/herbstore.jpg" style="width:20%; border:1px solid #000;" />
                                        }
                                    </td>
                                </tr>

                                <tr style="height:10px;"><td colspan="7"></td></tr>
                                <tr style="height:1px;background-color:#ccc;"><td colspan="7"></td></tr>
                                <tr style="height:10px;"><td colspan="7"></td></tr>

                                <tr style="height:25px;">
                                    <td colspan="7">
                                        SEJARAH NOTIS
                                    </td>
                                </tr>
                                @{
                                    if (isTax)
                                        dtHistory = dtSource.Where(x => x.no_cukai == no_cukai);
                                    else
                                        dtHistory = dtSource.Where(x => x.no_lesen == no_lesen);
                                }

                                <tr style="height:25px;">
                                    <td colspan="7" height="20%">
                                        <DxGrid Data="dtHistory" Context="GridAhli" @ref="Grid2" CssClass="custom-grid"
                                                KeyFieldName="id_kompaun">
                                            <Columns>

                                                <DxGridDataColumn Caption="No Rujukan" FieldName="no_rujukan" Width="14%" TextAlignment="GridTextAlignment.Center" />
                                                <DxGridDataColumn Caption="Status" FieldName="status_notis" Width="10%" TextAlignment="GridTextAlignment.Center" />
                                                <DxGridDataColumn Caption="Cara Serahan" FieldName="cara_serahan" Width="16%" TextAlignment="GridTextAlignment.Center" />
                                                <DxGridDataColumn Caption="Pegawai" FieldName="nama_pegawai" Width="15%" TextAlignment="GridTextAlignment.Center" />
                                                <DxGridDataColumn Caption="Arahan" FieldName="arahan" Width="35%" TextAlignment="GridTextAlignment.Center" />
                                                <DxGridDataColumn FieldName="TarikhData" DisplayFormat="dd/MM/yyyy" Caption="Tarikh Data"
                                                                  TextAlignment="GridTextAlignment.Center" SortOrder="GridColumnSortOrder.Descending" SortIndex="0"
                                                                  Width="10%" />
                                            </Columns>
                                        </DxGrid>

                                    </td>
                                </tr>

                                <tr style="height:10px;"><td colspan="7"></td></tr>
                                <tr style="height:1px;background-color:#ccc;"><td colspan="7"></td></tr>
                                <tr style="height:10px;"><td colspan="7"></td></tr>

                                <tr style="height:10px;"><td colspan="7"></td></tr>
                                @{
                                    var status = dtSource.Where(c => c.status_notis_id == dtData.status_notis_id).FirstOrDefault()?.status_notis_id;
                                    bool boolEnable = status != null && status != 3 && status != 5 && status != 8; //non-editable for : ditutup(3) , telah dibayar(5), dibatalkan(8)

                                    if (Grid.IsEditingNewRow())
                                        boolEnable = true;
                                }
                                <tr style="height:25px;">
                                    <td nowrap>Status Notis</td>
                                    <td nowrap>&nbsp;&nbsp;</td>
                                    <td width="50%" valign="top">
                                        <DxComboBox Data="@dtTrnStatus"
                                                    NullText="Pilih Status Bayaran..."
                                                    ShowValidationIcon="true"
                                                    FilteringMode="DataGridFilteringMode.Contains"
                                                    @bind-Value="@dtData.status_notis_id"
                                                    TextFieldName="status_name"
                                                    ValueFieldName="status_id"
                                                    Enabled="@boolEnable"
                                                    CssClass="cw-320">
                                        </DxComboBox>
                                    </td>
                                </tr>
                                <tr style="height:25px;">
                                    <td nowrap>Tempoh Notis</td>
                                    <td nowrap>&nbsp;&nbsp;</td>
                                    <td width="50%" valign="top">
                                        <DxComboBox Data="@dtDuration"
                                                    NullText="Pilih Tempoh Notis..."
                                                    ShowValidationIcon="true"
                                                    ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                    FilteringMode="DataGridFilteringMode.Contains"
                                                    TextFieldName="duration_value"
                                                    ValueFieldName="duration_id"
                                                    CssClass="cw-320"
                                                    Enabled="@boolEnable"
                                                    SelectedItemChanged="@((ref_notice_duration x) => SelectedItemChanged(x))"
                                                    DropDownWidthMode="DropDownWidthMode.ContentOrEditorWidth"
                                                    @bind-Value="@dtData.tempoh_notis_id">
                                        </DxComboBox>
                                    </td>
                                    <td width="100px" nowrap>&nbsp;&nbsp;&nbsp;</td>
                                    <td nowrap>Tarikh Tamat Notis</td>
                                    <td nowrap>&nbsp;&nbsp;</td>
                                    @{
                                        string tarikh_tamat = dtData.tarikh_tamat.HasValue
                                        ? dtData.tarikh_tamat.Value.ToString("dd/MM/yyyy")
                                        : "-";
                                        string combinetext = Convert.ToString(tarikh_tamat);
                                    }
                                    <td width="50%">
                                        <DxTextBox @bind-Text="@str_tarikh_tamat_notis"
                                                   ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                   BindValueMode="BindValueMode.OnInput"
                                                   NullText="Tarikh Tamat Notis..."
                                                   Maxlength="120"
                                                   ShowValidationIcon="true"
                                                   Enabled="false"
                                                   CssClass="cw-320" />
                                    </td>
                                </tr>
                            </table>
                        </DxFormLayoutItem>
                        <DxFormLayoutItem ColSpanMd="12"><hr style="padding:0;margin:0;" /></DxFormLayoutItem>
                        <DxFormLayoutItem ColSpanMd="12">
                            <DxButton SubmitFormOnClick="true" class="btn-edit-grid" Text="Simpan" />
                            <DxButton Click="@(() => Grid.CancelEditAsync())" class="btn-edit-grid" Text="Batal" />
                        </DxFormLayoutItem>
                    </DxFormLayout>
                </EditFormTemplate>
                <CustomValidators>
                    <MyCustomValidator DataItemValidating="ValidateGridData" />
                </CustomValidators>

                @*This is to count the summary*@
                <TotalSummary>
                    <DxGridSummaryItem FooterColumnName="id_notis"
                                       Name="Custom"
                                       SummaryType=GridSummaryItemType.Count />
                </TotalSummary>

            </DxGrid>

            <hr style="background-color:transparent; border: 2px solid #FFF;padding:0;margin:auto;" />
            <DxButton Text="Export XLSX" Click="ExportXlsx_Click" />
            <DxButton Text="Export XLS" Click="ExportXls_Click" />
            <DxButton Text="Export CSV" Click="ExportCsv_Click" />
            <hr style="background-color:transparent; padding:0.5em 0;margin:auto;" />
        </div>

    </DxLoadingPanel>
}

<DxPopup @bind-Visible="@ConfirmationShown" HeaderText="Hapus rekod" CssClass="confirmation-header" Width="auto" CloseOnOutsideClick="false">
    <BodyContentTemplate>
        <b>@strSelected</b> --> adalah rekod yang dipilih untuk dihapuskan.
        <br />Anda pasti untuk menghapuskan rekod ini?
        <br /><br />
        <div class="confirm-dialog-buttons">
            <DxButton Text="Ya" RenderStyle="ButtonRenderStyle.Primary" class="confirmation-btn" Click="@OnYesButtonClick" />
            <DxButton Text="Tidak" RenderStyle="ButtonRenderStyle.Secondary" class="confirmation-btn" Click="@OnNoButtonClick" />
        </div>
    </BodyContentTemplate>
</DxPopup>

@code {
    bool PanelVisible { get; set; }
    List<trn_notices_view> dtSource;
    IEnumerable<ref_trn_status> dtTrnStatus;
    IEnumerable<ref_notice_duration> dtDuration;
    IEnumerable<trn_notices_view> dtHistory;
    IGrid Grid { get; set; }
    IGrid Grid2 { get; set; }

    int GridPageIndex { get; set; } = 0;
    string GridSearchText = "";
    string str_tarikh_tamat_notis = "-";
    bool ConfirmationShown { get; set; } = false;
    int ActiveTabIndex;
    string strSelected { get; set; }
    trn_notices_view dtData { get; set; }
    bool isTax { get; set; } = false;

    GridColumnResizeMode ColumnResizeMode { get; set; } = GridColumnResizeMode.ColumnsContainer;
    TaskCompletionSource<bool> DataLoadedTcs { get; } = new(TaskCreationOptions.RunContinuationsAsynchronously);

    protected override async Task OnInitializedAsync()
    {
        PanelVisible = true;
        dtSource = await _NoticeService.ListReport();
        dtTrnStatus = await _RefTrnStatus.ListAll();
        dtDuration = await _RefNoticeDuration.ListAll();
        DataLoadedTcs.TrySetResult(true);
        PanelVisible = false;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await DataLoadedTcs.Task;
            await Grid.CancelEditAsync(); //.StartEditRowAsync(0);
        }
    }

    void OnActiveTabIndexChanged(int index)
    {
        ActiveTabIndex = index;
    }

    protected async Task OnSelectedRow(object itemData)
    {
        var item = (trn_notices_view)itemData;
        NavigationManager.NavigateTo(item.pautan_dokumen, false);
        //NavigationManager.NavigateTo("/reportnotis?norujukan=" + item.no_rujukan, false);
    }   

    void ValidateGridData(ValidationMessageStoreEventArgs e)
    {
        var _data = (trn_notices_view)e.EditModel;

        if (_data.status_notis_id == 0)
        {
            e.AddError(nameof(_data.status_notis_id), "Status tidak sah. Medan perlu diisi.");
        }
    }

    async Task Grid_EditModelSaving(GridEditModelSavingEventArgs e)
    {
        ReturnViewModel response = new ReturnViewModel();
        var editModel = e.EditModel as trn_notices_view;

        try
        {
            if (e.IsNew)
            {
                //response = await _CompoundService.Add(editModel);
            }
            else
            {
                response = await _NoticeService.Update(editModel);
            }

            if (response.ReturnCode == 200)
            {
                await UpdateDataAsync();
                StateHasChanged();
                HandleResponse(response.ReturnMessage);
            }
            else
            {
                HandleResponse(response.ReturnMessage, "Error");
            }
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"An error occurred while saving the edit model: {ex.Message}");
        }
    }

    async Task UpdateDataAsync()
    {
        dtSource = await _NoticeService.ListReport();
    }

    public void Dispose()
    {
        DataLoadedTcs.TrySetCanceled();
    }

    async Task Delete(trn_notices_view item)
    {
        strSelected = item.no_rujukan;
        dtData = item;
        ConfirmationShown = true;
    }

    async void OnYesButtonClick()
    {
        try
        {
            ReturnViewModel response = new ReturnViewModel();
            response = await _NoticeService.Delete(dtData.id_notis);

            if (response.ReturnCode == 200)
            {
                await UpdateDataAsync();

                ConfirmationShown = false;
                StateHasChanged();
                HandleResponse(response.ReturnMessage);

            }
            else
            {
                ConfirmationShown = false;
                HandleResponse(response.ReturnMessage, "Error");
            }
        }
        catch (Exception ex)
        {
        }
        dtData = null;
    }

    void OnNoButtonClick()
    {
        dtData = null;
        ConfirmationShown = false;
    }

    void Grid_CustomizeFilterRowEditor(GridCustomizeFilterRowEditorEventArgs e)
    {
        if (e.FieldName == "TarikhData" || e.FieldName == "ModifiedDate" || e.FieldName == "FixedDate")
            ((ITextEditSettings)e.EditSettings).ClearButtonDisplayMode = DataEditorClearButtonDisplayMode.Never;
    }

    void Grid_CustomizeSummaryDisplayText(GridCustomizeSummaryDisplayTextEventArgs e)
    {
        if (e.Item.Name == "Custom")
            e.DisplayText = string.Format("Bil. : {0}", e.Value);
    }

    public MarkupString GetStatusNoticeIconHtml(string status, int? statusId)
    {
        string priorytyClass = "";
        string title = "";

        if (statusId == 1)
        {
            priorytyClass = "new";
            title = status.ToUpper();
        }
        else if (statusId == 2)
        {
            priorytyClass = "action";
            title = status.ToUpper();
        }
        else if (statusId == 3)
        {
            priorytyClass = "close";
            title = status.ToUpper();
        }
        else if (statusId == 4)
        {
            priorytyClass = "warning";
            title = status.ToUpper();
        }
        else if (statusId == 5)
        {
            priorytyClass = "info";
            title = status.ToUpper();
        }
        else if (statusId == 6)
        {
            priorytyClass = "check";
            title = status.ToUpper();
        }
        else if (statusId == 7)
        {
            priorytyClass = "transfer";
            title = status.ToUpper();
        }
        else if (statusId == 8)
        {
            priorytyClass = "cancel";
            title = status.ToUpper();
        }

        string html = string.Format("<span class='text-black badge e-priority-{0} py-1 px-2' title='{1}'>{1}</span>", priorytyClass,
        title);
        return new MarkupString(html);
    }

    public MarkupString CombineText(string strNoLesen, string strNama)
    {
        string formattedNama = strNama?.ToUpper() ?? "";
        string html = string.Format("{0} <br/> {1}", strNoLesen, formattedNama);
        return new MarkupString(html);
    }
    // public MarkupString CombineTempohText(DateTime? dtTarikhData, string strNoLesen)
    // {
    //     string html = string.Format("{0}", dtTarikhData);
    //     //string html = string.Format("{0} <br/> {1}", dtTarikhData, strNoLesen);
    //     return new MarkupString(html);
    // }
    public MarkupString GetTarikhTamatIconHtml(DateTime? dtTarikhTamat, string strTempoh, int? intTempohId)
    {
        var calculatedDate = CalculateTarikhTamat((DateTime)dtTarikhTamat, intTempohId);
        str_tarikh_tamat_notis = calculatedDate.ToString("dd/MM/yyyy");
        string formattedTempoh = strTempoh?.ToUpper() ?? "";
        string html = string.Format("{0} <br/> {1}", str_tarikh_tamat_notis, formattedTempoh);
        return new MarkupString(html);
    }

    void Grid_CustomizeElement(GridCustomizeElementEventArgs e)
    {
        // if (e.ElementType == GridElementType.DataRow && e.Grid.GetRowValue(e.VisibleIndex, "status_notis_id").ToString() == "BELUM BAYAR")
        // {
        //     e.Style = "color: #fff; background-color:#e46767";
        // }
        if (e.ElementType == GridElementType.DataRow && e.Grid.GetRowValue(e.VisibleIndex, "status_notis_id").ToString() == "1")
        {
            e.Style = "color: #000; background-color:#89dd85";
        }
    }

    async Task ExportXlsx_Click()
    {
        await Grid.ExportToXlsxAsync("ExportResult");
    }

    async Task ExportXls_Click()
    {
        await Grid.ExportToXlsAsync("ExportResult");
    }

    async Task ExportCsv_Click()
    {
        await Grid.ExportToCsvAsync("ExportResult");
    }

    private void HandleResponse(string message, string? status = "Success")
    {
        var RenderStyle = ToastRenderStyle.Success;

        if (status == "Error")
        {
            RenderStyle = ToastRenderStyle.Danger;
        }
        else if (status == "Info")
        {
            RenderStyle = ToastRenderStyle.Info;
        }
        else if (status == "Warning")
        {
            RenderStyle = ToastRenderStyle.Warning;
        }

        ToastService.ShowToast(new ToastOptions()
            {
                ProviderName = "Overview",
                ThemeMode = ToastThemeMode.Saturated,
                RenderStyle = RenderStyle,
                Title = message
            });
    }

    private DateTime CalculateTarikhTamat(DateTime createdAt, int? duration)
    {
        DateTime tarikhTamat;
        switch (duration)
        {
            case 2:
                tarikhTamat = createdAt;
                break;

            case 3:
                tarikhTamat = createdAt.AddDays(3);
                break;

            case 4:
                tarikhTamat = createdAt.AddDays(5);
                break;

            case 5:
                tarikhTamat = createdAt.AddDays(7);
                break;

            case 6:
                tarikhTamat = createdAt.AddDays(14);
                break;

            case 7:
                tarikhTamat = createdAt.AddDays(30);
                break;

            default:
                tarikhTamat = createdAt;
                break;
        }
        return tarikhTamat;
    }

    void SelectedItemChanged(ref_notice_duration x)
    {
        if (x != null)
        {
            foreach (var item in dtSource)
            {
                var calculatedDate = CalculateTarikhTamat((DateTime)item.TarikhData, x.duration_id);
                str_tarikh_tamat_notis = calculatedDate.ToString("dd/MM/yyyy");
            }
        }
        else
        {
            str_tarikh_tamat_notis = "-";
        }
    }
}
