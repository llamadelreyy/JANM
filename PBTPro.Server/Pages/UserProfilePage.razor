@page "/user_profile"
@attribute [AllowAnonymous]

@using PBTPro.Data
@using PBTPro.DAL.Models
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components
@inject UserProfileService _UserProfileService
@inject DepartmentService _DepartmentService
@inject SectionService _SectionService
@inject UnitService _UnitService
@inject UserRoleService _UserRoleService
@inject PBTAuthStateProvider _PBTAuthStateProvider

@* @inject AllocationAuthenticationStateProvider AllocationAuthenticationStateProvider *@
@inject NavigationManager NavigationManager

<div class="d-lg-flex border-bottom">
    <div class="col-md-12 py-1 dx-helptitle pageTitle">
        <img class="imgTitle" src="/images/icons-small/card-address.png" />
        <div class="textTitle">Profil Pengguna</div>
    </div>
</div>

<div class="item-container-y">
    <div class="ProfileBox" style="border:solid 1px #999;border-radius: 5px;box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.25);">
        <div class="card-body">
            <EditForm Model="@userInfo" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit" Context="EditFormContext">
                <DataAnnotationsValidator />
                <DxFormLayout>
                    <DxFormLayoutItem ColSpanMd="2">
                        <div class="align-items-center align-content-center">
                            <img class="profile-photo" src="images/profile/avatar-user-profile-icon.jpg" alt="" />
                        </div>
                    </DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="10">
                        <div class="upload-container">
                            <div style="@(SelectedFilesCount > 0 ? "display: none" : string.Empty)">
                                <span class="drop-file-label mb-1">Click the Select File button to select a file</span>
                            </div>
                            <div class="bottom-upload">
                            <DxUpload Name="ImageUpload"
                                      MaxFileSize="4000000"
                                      AllowMultiFileUpload="false"
                                      AllowedFileExtensions="@(new List<string> { ".jpg", ".jpeg", ".gif", ".png" })"
                                      UploadUrl="@GetUploadUrl("api/UploadValidation/UploadFile/")"
                                      SelectedFilesChanged="@SelectedFilesChanged">
                            </DxUpload>
                            </div>
                        </div>
                    </DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="4">
                        <div>Jabatan</div>
                        <DxComboBox Data="@dtDepartment"
                                NullText="Pilih Jabatan ..."
                                ShowValidationIcon="true"
                                FilteringMode="DataGridFilteringMode.Contains"
                                @bind-Value="@userInfo.profile_department_id"
                                TextFieldName="dept_name"
                                ValueFieldName="dept_id">
                        </DxComboBox>
                    </DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="8"></DxFormLayoutItem>

                    <DxFormLayoutItem ColSpanMd="4">
                        <div>Section</div>
                        @{
                                var intDepartmentID = dtDepartment.Where(c => c.dept_id == userInfo.profile_department_id).FirstOrDefault().dept_id;
                                var SectionData = dtSection.Where(x => x.section_id == intDepartmentID);
                        }
                        <DxComboBox Data="@SectionData"
                                NullText="Pilih Seksyen ..."
                                ShowValidationIcon="true"
                                FilteringMode="DataGridFilteringMode.Contains"s
                                @bind-Value="@userInfo.profile_section_id"
                                TextFieldName="section_name"
                                ValueFieldName="section_id">
                        </DxComboBox>
                    </DxFormLayoutItem>

                    <DxFormLayoutItem ColSpanMd="4">
                        <div>Unit</div>
                        @{
                            var intSectionID = dtSection.Where(d => d.section_id == userInfo.profile_section_id && d.dept_id == userInfo.profile_department_id).FirstOrDefault()?.section_id;
                            var UnitData = dtUnit.Where(x => x.section_id == intSectionID && x.dept_id == userInfo.profile_department_id);
                        }
                        <DxComboBox Data="@UnitData"
                                NullText="Pilih Unit ..."
                                ShowValidationIcon="true"
                                FilteringMode="DataGridFilteringMode.Contains"
                                @bind-Value="@userInfo.profile_unit_id"
                                TextFieldName="unit_name"
                                ValueFieldName="unit_id">
                        </DxComboBox>
                    </DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="4"></DxFormLayoutItem>

                    <DxFormLayoutItem ColSpanMd="4">
                        <div>No Pekerja</div>
                        <DxTextBox @bind-Text="@userInfo.profile_icno"
                                   NullText="No Pekerja ..."
                                   BindValueMode="BindValueMode.OnInput"
                                   CssClass="cw-480"
                                   Enabled="true" />
                    </DxFormLayoutItem>

                    <DxFormLayoutItem ColSpanMd="4">
                        <div>No Telefon</div>
                        <DxTextBox @bind-Text="@userInfo.profile_tel_no"
                                   NullText="No Telefon ..."
                                   BindValueMode="BindValueMode.OnInput"
                                   Enabled="true"
                                   CssClass="cw-480"
                                   ShowValidationIcon="true" />
                    </DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="4"></DxFormLayoutItem>

                    <DxFormLayoutItem ColSpanMd="4">
                        <div>ID Pengguna</div>
                        <DxTextBox @bind-Text="@userInfo.profile_user_id"
                                   NullText="ID Pengguna ..."
                                   BindValueMode="BindValueMode.OnInput"
                                   CssClass="cw-480"
                                   Enabled="true" />
                    </DxFormLayoutItem>

                    <DxFormLayoutItem ColSpanMd="4">
                        <div>Peranan</div>
                        <DxComboBox Data="@dtRoles"
                                NullText="Pilih Peranan ..."
                                ShowValidationIcon="true"
                                FilteringMode="DataGridFilteringMode.Contains"
                                @bind-Value="@userInfo.profile_role_id"
                                TextFieldName="role_name"
                                ValueFieldName="role_id">
                        </DxComboBox>
                    </DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="4"></DxFormLayoutItem>


                    <DxFormLayoutItem ColSpanMd="8">
                        <div>Nama</div>
                        <DxTextBox @bind-Text="@userInfo.profile_name"
                                   NullText="Nama Pengguna ..."
                                   BindValueMode="BindValueMode.OnInput"
                                   CssClass="cw-480"
                                   Enabled="true" />
                    </DxFormLayoutItem>

                    <DxFormLayoutItem ColSpanMd="8">
                        <div>Emel</div>
                        <DxTextBox @bind-Text="@userInfo.profile_email"
                                   NullText="Emel pengguna ..."
                                   BindValueMode="BindValueMode.OnInput"
                                   Enabled="true"
                                   CssClass="cw-480"
                                   ShowValidationIcon="true" />
                    </DxFormLayoutItem>

@*                     <DxFormLayoutItem ColSpanMd="4">
                        <div>Katalaluan Lama</div>
                        <DxTextBox @bind-Text="@userInfo.userNowPassword"
                                   NullText="Katalaluan lama ..."
                                   BindValueMode="BindValueMode.OnInput"
                                   Enabled="true"
                                   Password="true"
                                   CssClass="cw-480"
                                   ShowValidationIcon="true"
                                   ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" />
                    </DxFormLayoutItem>

                    <DxFormLayoutItem ColSpanMd="4">
                        <div>Katalaluan Baru</div>
                        <DxTextBox @bind-Text="@userInfo.userNewPassword"
                                   NullText="Katalaluan baru ..."
                                   BindValueMode="BindValueMode.OnInput"
                                   Enabled="true"
                                   Password="true"
                                   CssClass="cw-480"
                                   ShowValidationIcon="true"
                                   ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" />
                    </DxFormLayoutItem>

                    <DxFormLayoutItem ColSpanMd="4">
                        <div>Sah Katalaluan Baru</div>
                        <DxTextBox @bind-Text="@userInfo.userConfirmPassword"
                                   NullText="Sahkan Katalaluan baru ..."
                                   BindValueMode="BindValueMode.OnInput"
                                   Enabled="true"
                                   Password="true"
                                   CssClass="cw-480"
                                   ShowValidationIcon="true" />
                    </DxFormLayoutItem>
 *@                <div>&nbsp;<br /></div>
                    <DxFormLayoutItem ColSpanMd="10">
@*                         <ul style="margin-top:-20px;">
                            <li>Min Kata Laluan mestilah 8 atau lebih aksara campuran huruf dan abjad.</li>
                            <li>Mesti mengandungi sekurang-kurangnya 1 huruf kecil dan 1 huruf besar abjad.</li>
                            <li>Mesti mengandungi sekurang-kurangnya 1 digit.</li>
                            <li>Mesti mengandungi sekurang-kurangnya 1 aksara khas. (cth:!#$%^&)</li>
                        </ul> *@
                        <DxButton CssClass="w-100 normal-btn" Text="Simpan"
                                  RenderStyle="ButtonRenderStyle.Primary"
                                  Enabled="true"
                                  SubmitFormOnClick="true">
                        </DxButton>
                    </DxFormLayoutItem>
                    <div>&nbsp;<br /></div>
                    <DxFormLayoutItem ColSpanMd="12">
                        <ValidationSummary />
                    </DxFormLayoutItem>
                </DxFormLayout>
                <div class="row w-100 mx-0">
                    <p class="demo-text col-12 mt-2">
                        Pengesahan Maklumat :
                        <b>@FormValidationState</b>
                    </p>
                </div>
            </EditForm>

        </div>
    </div>
</div>



@code {
    [Inject] IToastNotificationService ToastService { get; set; }
    user_profile userInfo = new user_profile();

    IEnumerable<user_profile> dataSource;
    IEnumerable<department_info> dtDepartment;
    IEnumerable<section_info> dtSection;
    IEnumerable<unit_info> dtUnit;
    IEnumerable<user_role> dtRoles;

    //Get current user id
    int intCurrentUserId { get; set; } = 0;
    string FormValidationState = @"Sila tekan butang ""Simpan"" untuk sahkan data.";
    string Text { get; set; } = "";
    string Value { get; set; }

    // // IEnumerable<string> Jabatan = new List<string>() { "Jabatan Perlesenan", "Jabatan Penilaian", "Jabatan Undang-Undang", "Jabatan Kesihatan", };
    // // IEnumerable<string> Unit = new List<string>() { "Unit Hasil", };
    // // IEnumerable<string> Roles = new List<string>() { "System Admin", };

    TaskCompletionSource<bool> DataLoadedTcs { get; } = new(TaskCreationOptions.RunContinuationsAsynchronously);

    //============== Upload file ===============//
    int SelectedFilesCount { get; set; }
    protected void SelectedFilesChanged(IEnumerable<UploadFileInfo> files)
    {
        SelectedFilesCount = files.ToList().Count;
        InvokeAsync(StateHasChanged);
    }

    protected string GetUploadUrl(string url)
    {
        return NavigationManager.ToAbsoluteUri(url).AbsoluteUri;
    }
    //================ ** ==================//

    protected override async Task OnInitializedAsync()
    {
        dataSource = await _UserProfileService.Retrieve(_PBTAuthStateProvider.CurrentUser.Userid);
        dtDepartment = await _DepartmentService.GetAllDepartment();
        dtSection = await _SectionService.GetAllSection();
        dtUnit = await _UnitService.GetAllUnit();
        dtRoles = await _UserRoleService.GetRolesByUserAsync(_PBTAuthStateProvider.CurrentUser.Userid);

        DataLoadedTcs.TrySetResult(true);
    }
        
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await DataLoadedTcs.Task;
        }
    }

    public async Task HandleValidSubmit()
    {
        FormValidationState = @"Maklumat yang dimasukkan sah.";
        // bool blnSuccess = await _userService.UpdateUserPasswordAsync(userInfo, intCurrentUserId);

        // if (blnSuccess)
        // {
        //     toastService.ShowInfo("Proses kemaskini katalaluan selesai.");

        ToastService.ShowToast(new ToastOptions()
            {
                ProviderName = "Overview",
                ThemeMode = ToastThemeMode.Saturated,
                RenderStyle = ToastRenderStyle.Success,
                Title = "Proses kemaskini katalaluan selesai."
            });


        //     await AllocationAuthenticationStateProvider.LogoutAsync();
        //     //You actually need to NavigateTo your current Uri with force load. I use simple extension method for this
        //     NavigationManager.NavigateTo("login", true);

        // }
        // else
        // {
        //     toastService.ShowError("Ralat telah berlaku! Sila hubungi pentadbir sistem.");
        // }
    }

    void HandleInvalidSubmit()
    {
        FormValidationState = @"Maklumat yang dimasukkan tidak sah!";
    }

}
