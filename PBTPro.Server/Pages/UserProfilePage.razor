@page "/user_profile"
@attribute [AllowAnonymous]

@using PBTPro.DAL.Models.PayLoads
@using PBTPro.DAL.Services
@using PBTPro.Data
@using PBTPro.DAL.Models
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components
@inject UserProfileService _UserProfileService
@inject DepartmentService _DepartmentService
@inject SectionService _SectionService
@inject UnitService _UnitService
@inject UserRoleService _UserRoleService
@inject PBTAuthStateProvider _PBTAuthStateProvider

@* @inject AllocationAuthenticationStateProvider AllocationAuthenticationStateProvider *@
@inject NavigationManager NavigationManager

<div class="d-lg-flex border-bottom">
    <div class="col-md-12 py-1 dx-helptitle pageTitle">
        <img class="imgTitle" src="/images/icons-small/card-address.png" />
        <div class="textTitle">Profail Pengguna</div>
    </div>
</div>

<div class="item-container-y">
    <div class="ProfileBox" style="border:solid 1px #999;border-radius: 5px;box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.25);">
        <div class="card-body">
            <EditForm Model="@userInfo" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit" Context="EditFormContext">
                <DataAnnotationsValidator />
                <DxFormLayout>
                    <DxFormLayoutItem ColSpanMd="2">
                        <div class="align-items-center align-content-center">
                            <img class="profile-photo" src="images/profile/avatar-user-profile-icon.jpg" alt="" />
                        </div>
                    </DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="10">
                        <div class="upload-container">
                            <div style="@(SelectedFilesCount > 0 ? "display: none" : string.Empty)">
                                <span class="drop-file-label mb-1">Tekan butang Pilih untuk pilih fail imej</span>
                            </div>
                            <div class="bottom-upload">
                            <DxUpload Name="ImageUpload"
                                      MaxFileSize="4000000"
                                      SelectButtonText="Pilih fail imej"
                                      AllowMultiFileUpload="false"
                                      AllowedFileExtensions="@(new List<string> { ".jpg", ".jpeg", ".gif", ".png" })"
                                      UploadUrl="@GetUploadUrl("api/UploadValidation/UploadFile/")"
                                      SelectedFilesChanged="@SelectedFilesChanged">
                            </DxUpload>
                            </div>
                        </div>
                    </DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="4">
                        <div>Jabatan</div>
                        <DxTextBox @bind-Text="@userInfo.dept_name"
                                   NullText="Jabatan pengguna ..."
                                   BindValueMode="BindValueMode.OnInput"
                                   CssClass="cw-480"
                                   Enabled="false" />
                    </DxFormLayoutItem>

                    <DxFormLayoutItem ColSpanMd="4">
                        <div>Section</div>
                        <DxTextBox @bind-Text="@userInfo.div_name"
                                   NullText="Seksyen pengguna ..."
                                   BindValueMode="BindValueMode.OnInput"
                                   CssClass="cw-480"
                                   Enabled="false" />
                    </DxFormLayoutItem>

                    <DxFormLayoutItem ColSpanMd="4">
                        <div>Unit</div>
                        <DxTextBox @bind-Text="@userInfo.unit_name"
                                   NullText="Unit pengguna ..."
                                   BindValueMode="BindValueMode.OnInput"
                                   CssClass="cw-480"
                                   Enabled="false" />
                    </DxFormLayoutItem>

                    <DxFormLayoutItem ColSpanMd="4">
                        <div>No Kad Pengenalan</div>
                        <DxTextBox @bind-Text="@userInfo.profile_icno"
                                   NullText="cth:750727085221 ..."
                                   BindValueMode="BindValueMode.OnInput"
                                   CssClass="cw-480"
                                   Enabled="false" />
                    </DxFormLayoutItem>

                    <DxFormLayoutItem ColSpanMd="4">
                        <div>No Telefon</div>
                        <DxMaskedInput @bind-Value="@userInfo.profile_telno"
                                       ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                       BindValueMode="BindValueMode.OnInput"
                                       Maxlength="14"
                                       ShowValidationIcon="true"
                                       CssClass="cw-480" style="width:170px"
                                       MaskMode=MaskMode.Text
                                       Mask="99999999999999">
                                <DxTextMaskProperties SaveLiteral=false></DxTextMaskProperties>
                        </DxMaskedInput>
                    </DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="4"></DxFormLayoutItem>

                    <DxFormLayoutItem ColSpanMd="4">
                        <div>ID Pengguna</div>
                        <DxTextBox 
                                   NullText="ID Pengguna ..."
                                  @*  @bind-Text="@userInfo.profile_user_id" *@
                                   BindValueMode="BindValueMode.OnInput"
                                   CssClass="cw-480"
                                   Enabled="false" />
                    </DxFormLayoutItem>

                    <DxFormLayoutItem ColSpanMd="4">
                        <div>Peranan</div>
                        <DxTextBox @bind-Text="@userInfo.profile_role"
                                   NullText="Peranan pengguna ..."
                                   BindValueMode="BindValueMode.OnInput"
                                   CssClass="cw-480"
                                   Enabled="false" />
                    </DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="4"></DxFormLayoutItem>


                    <DxFormLayoutItem ColSpanMd="6">
                        <div>Nama</div>
                        <DxTextBox @bind-Text="@userInfo.profile_name"
                                   NullText="Nama Pengguna ..."
                                   BindValueMode="BindValueMode.OnInput"
                                   CssClass="cw-480"
                                   Enabled="true" />
                    </DxFormLayoutItem>

                    <DxFormLayoutItem ColSpanMd="6">
                        <div>Emel</div>
@*                         <DxMaskedInput @bind-Value="@userInfo.profile_email"
                                       CssClass="cw-320"
                                       NullText="@("_@_.__")"
                                       Mask="@EmailMask"
                                       Maxlength="60"
                                       ShowValidationIcon="true"
                                       MaskMode="MaskMode.RegEx">
                            <DxRegExMaskProperties MaskAutoCompleteMode="@((MaskAutoCompleteMode)AutoCompleteMode)"
                                                   Placeholder="Placeholder"
                                                   PlaceholdersVisible="PlaceholderVisible" />
                        </DxMaskedInput> *@
                        <DxMaskedInput @bind-Value="@userInfo.profile_email"
                                       CssClass="cw-320"
                                       NullText="@("_@_.__")"
                                       Mask="@(@"((\w|[.-])+@(\w|-)+\.(\w|-){2,4})?")"
                                       Maxlength="60"
                                       ShowValidationIcon="true"
                                       MaskMode="MaskMode.RegEx">
                            <DxRegExMaskProperties MaskAutoCompleteMode="@((MaskAutoCompleteMode)AutoCompleteMode)"
                                                   Placeholder="Placeholder"
                                                   PlaceholdersVisible="PlaceholderVisible" />
                        </DxMaskedInput>
                    </DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="12"><hr /></DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="12">
                        <DxButton CssClass="w-100 normal-btn" Text="Simpan"
                                  RenderStyle="ButtonRenderStyle.Primary"
                                  Enabled="true"
                                  SubmitFormOnClick="true">
                        </DxButton>
                    </DxFormLayoutItem>

                </DxFormLayout>
                <div class="row w-100 mx-0">
                    <p class="demo-text col-12 mt-2">
                        Pengesahan Maklumat :
                        <b>@FormValidationState</b>
                    </p>
                </div>
            </EditForm>

        </div>
    </div>
</div>

@code {
    [Inject] IToastNotificationService ToastService { get; set; }
    user_profile_view userInfo = new user_profile_view();

    IEnumerable<user_profile_view> dataSource;
    // IEnumerable<department_info> dtDepartment;
    // IEnumerable<section_info> dtSection;
    // IEnumerable<unit_info> dtUnit;
    // IEnumerable<user_role> dtRoles;

    //Get current user id
    int intCurrentUserId { get; set; } = 0;
    string FormValidationState = @"Sila tekan butang ""Simpan"" untuk sahkan data.";

    IEnumerable<char> PredefinedPlaceholders { get; set; } = new List<char>() { '_', '#' };
    // string EmailMask { get; set; } = @"\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*";

    MaskAutoCompleteMode AutoCompleteMode { get; set; } = MaskAutoCompleteMode.Strong;
    char Placeholder { get; set; } = '_';
    bool PlaceholderVisible { get; set; } = true;

    TaskCompletionSource<bool> DataLoadedTcs { get; } = new(TaskCreationOptions.RunContinuationsAsynchronously);

    //============== Upload file ===============//
    int SelectedFilesCount { get; set; }
    protected void SelectedFilesChanged(IEnumerable<UploadFileInfo> files)
    {
        SelectedFilesCount = files.ToList().Count;
        InvokeAsync(StateHasChanged);
    }

    protected string GetUploadUrl(string url)
    {
        return NavigationManager.ToAbsoluteUri(url).AbsoluteUri;
    }
    //================ ** ==================//

    protected override async Task OnInitializedAsync()
    {
        dataSource = await _UserProfileService.Retrieve(Convert.ToString(_PBTAuthStateProvider.CurrentUser.Userid));
        //dataSource = await _UserProfileService.Retrieve("1");
        if (dataSource != null)
            userInfo = dataSource.FirstOrDefault();

        // dtDepartment = await _DepartmentService.GetAllDepartment();
        // dtSection = await _SectionService.GetAllSection();
        // dtUnit = await _UnitService.GetAllUnit();
        // dtRoles = await _UserRoleService.GetRolesByUserAsync(_PBTAuthStateProvider.CurrentUser.Userid);

        DataLoadedTcs.TrySetResult(true);
    }
        
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await DataLoadedTcs.Task;
        }
    }

    public async Task HandleValidSubmit()
    {
        FormValidationState = @"Maklumat yang dimasukkan sah.";
        // bool blnSuccess = await _userService.UpdateUserPasswordAsync(userInfo, intCurrentUserId);

        // if (blnSuccess)
        // {
        //     toastService.ShowInfo("Proses kemaskini katalaluan selesai.");

        ToastService.ShowToast(new ToastOptions()
            {
                ProviderName = "Overview",
                ThemeMode = ToastThemeMode.Saturated,
                RenderStyle = ToastRenderStyle.Success,
                Title = "Proses kemaskini katalaluan selesai."
            });


        //     await AllocationAuthenticationStateProvider.LogoutAsync();
        //     //You actually need to NavigateTo your current Uri with force load. I use simple extension method for this
        //     NavigationManager.NavigateTo("login", true);

        // }
        // else
        // {

        //     ToastService.ShowToast(new ToastOptions()
        //         {
        //             ProviderName = "Overview",
        //             ThemeMode = ToastThemeMode.Saturated,
        //             RenderStyle = ToastRenderStyle.Danger,
        //             Title = "Ralat telah berlaku! Sila hubungi pentadbir sistem."
        //         });
        // //     toastService.ShowError("Ralat telah berlaku! Sila hubungi pentadbir sistem.");
        // }
    }

    void HandleInvalidSubmit()
    {
        FormValidationState = @"Maklumat yang dimasukkan tidak sah!";
    }

}
