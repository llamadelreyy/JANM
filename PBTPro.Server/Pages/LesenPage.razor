@page "/lesen"
@attribute [Authorize]

@implements IDisposable

@using PBTPro
@using PBTPro.DAL.Models.PayLoads
@using PBTPro.Shared
@using PBTPro.Data
@using PBTPro.DAL
@using PBTPro.DAL.Models
@using PBTPro.DAL.Services
@using PBTPro.DAL.Models.CommonServices
@using DevExpress.Blazor

@inject LicenseService _LicenseService
@inject PremisService _PremisService
@inject NavigationManager NavigationManager
@inject IToastNotificationService ToastService
@inject PBTAuthPermissionService PermissionService

<style>
    .dxbl-grid {
        height: 98.5%;
        max-height: 98.5%;
    }
</style>
@* @if (!PermissionService.HasPermission("View"))
{
    NavigationManager.NavigateTo("/no-permission");
}
else
{ *@
<DxLoadingPanel @bind-Visible="PanelVisible"
                IsContentBlocked="true"
                ApplyBackgroundShading="true"
                IndicatorAreaVisible="false"
                Text="Capaian Data...">

    <div class="d-lg-flex border-bottom">
        <div class="col-md-12 py-1 dx-helptitle pageTitle">
            <img class="imgTitle" src="\images\icons-small\toolbox.png" />
            <div class="textTitle">Senarai Lesen</div>
        </div>
    </div>

    <div class="item-container-x" style="padding-top:2px;">
        <DxTabs ActiveTabIndex="@ActiveTabIndex" ActiveTabIndexChanged="@OnActiveTabIndexChanged" TabsPosition="TabsPosition.Top" RenderMode="TabsRenderMode.Default">
            @{
                <DxTab Text="Senarai Premis"></DxTab>
                <DxTab Text="Senarai Lesen"></DxTab>
            }
        </DxTabs>

        <DxGrid @ref="Grid"
                Data="dataSource"
                KeyFieldName="lesen_id"
                ShowGroupPanel="true"
                ShowFilterRow="false"
                TextWrapEnabled="true"
                CustomizeSummaryDisplayText="Grid_CustomizeSummaryDisplayText"
                EditorRenderMode="GridEditorRenderMode.Integrated"
                FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
                ShowSearchBox="true"
                AllowSelectRowByClick="true"
                @bind-SearchText="@GridSearchText"
                PageSize="25"
                @bind-PageIndex="@GridPageIndex"
                PagerPosition="GridPagerPosition.Bottom"
                PagerNavigationMode="PagerNavigationMode.InputBox"
                EditModelSaving="Grid_EditModelSaving"
                EditFormButtonsVisible="false"
                PageSizeSelectorVisible="true"
                PageSizeSelectorItems="@(new int[] { 25, 50, 100 })"
                PageSizeSelectorAllRowsItemVisible="true"
                PagerAutoHideNavButtons="false"
                ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
                GroupFooterDisplayMode="GridGroupFooterDisplayMode.Auto"
                HighlightRowOnHover="true"
                CssClass="mv-1000">

            <Columns>
                @if (formType == "Lesen")
                {
                    <DxGridCommandColumn Width="55px">
                        <HeaderTemplate>
                            @if (PermissionService.HasPermission("Add"))
                            {
                                <a @onclick="@(() => Grid.StartEditNewRowAsync())" style="text-decoration: none;" href="javascript:void(0);"><img src="images/icons/plus-circle.png" /></a>
                            }
                        </HeaderTemplate>
                        <CellDisplayTemplate>
                            <a @onclick="@(() => Grid.StartEditRowAsync(context.VisibleIndex))" style="text-decoration: none; padding:0px 2px;" href="javascript:void(0);"><img src="images/icons-small/table--pencil.png" /></a>
                            @if (PermissionService.HasPermission("Edit"))
                            {
                                <a @onclick="@(() => Grid.StartEditRowAsync(context.VisibleIndex))" style="text-decoration: none; padding:0px 2px;" href="javascript:void(0);"><img src="images/icons-small/table--pencil.png" /></a>
                            }
                            @if (PermissionService.HasPermission("Delete"))
                            {
                                <a @onclick="@(() => Delete((mst_licensee_view)context.DataItem))" style="text-decoration: none;padding:0px 0px 0px 2px;" href="javascript:void(0);"><img src="images/icons-small/cross-circle-frame.png" /></a>
                            }
                        </CellDisplayTemplate>
                    </DxGridCommandColumn>
                    <DxGridDataColumn Caption="Nama Syarikat" MinWidth="120" Width="20%" FieldName="nama_perniagaan" />
                    <DxGridDataColumn Caption="Alamat Syarikat" MinWidth="120" Width="20%" FieldName="alamat_perniagaan" />
                    <DxGridDataColumn Caption="No Kad Pengenalan" MinWidth="120" Width="10%" FieldName="icno_pemilik" />
                    <DxGridDataColumn FieldName="tarikh_mula_isu"
                                      DisplayFormat="dd/MM/yyyy"
                                      Caption="Tarikh Mula Isu"
                                      MinWidth="100"
                                      Width="25%"
                                      TextAlignment="GridTextAlignment.Center"
                                      SortOrder="GridColumnSortOrder.Ascending"
                                      SortIndex="0">
                        <FilterMenuTemplate>
                            <DateRange FilterContext="context" />
                        </FilterMenuTemplate>
                    </DxGridDataColumn>
                    <DxGridDataColumn FieldName="tarikh_tamat_isu"
                                      DisplayFormat="dd/MM/yyyy"
                                      Caption="Tarikh Tamat Isu"
                                      MinWidth="100"
                                      Width="25%"
                                      TextAlignment="GridTextAlignment.Center"
                                      SortOrder="GridColumnSortOrder.Ascending"
                                      SortIndex="0">
                        <FilterMenuTemplate>
                            <DateRange FilterContext="context" />
                        </FilterMenuTemplate>
                    </DxGridDataColumn>
                    <DxGridDataColumn Caption="Status Lesen" MinWidth="120" Width="31%" FieldName="status_lesen" TextAlignment="GridTextAlignment.Center" AllowGroup="false">
                        <CellDisplayTemplate>
                            <div>@GetStatusLesenIconHtml(((mst_licensee_view)context.DataItem).status_lesen)</div>
                        </CellDisplayTemplate>
                    </DxGridDataColumn>
                }
            </Columns>

            <EditFormTemplate Context="EditFormContext">
                @{
                    var dtData = (mst_licensee_view)EditFormContext.EditModel;
                }
                <DxFormLayout CssClass="w-100">
                    <DxFormLayoutItem ColSpanMd="12">
                        <table class="layout_edit">
                            <tr height="30px">
                                <td nowrap>Nama Pemilik : </td>
                                <td nowrap>&nbsp;&nbsp;</td>
                                <td width="25%">
                                    <span>@dtData.nama_pemilik</span>
                                </td>
                                <td width="100px">&nbsp;</td>
                                <td nowrap>No Kad Pengenalan : </td>
                                <td>&nbsp;&nbsp;</td>
                                <td width="25%">
                                    <span>@dtData.icno_pemilik</span>
                                </td>
                                <td width="100px">&nbsp;</td>
                                <td nowrap>Emel : </td>
                                <td>&nbsp;&nbsp;</td>
                                <td width="25%">
                                    @{
                                        var Emel = @dtData.emel_pemilik ?? "-";
                                    }
                                    <span>@Emel</span>
                                </td>
                                <td width="100px">&nbsp;</td>
                                <td nowrap>No. Telefon : </td>
                                <td>&nbsp;&nbsp;</td>
                                <td width="25%">
                                    @{
                                        var notel = @dtData.notel_pemilk ?? "-";
                                    }
                                    <span>@notel</span>
                                </td>
                            </tr>
                            <tr height="30px">
                                <td nowrap>Nama Syarikat : </td>
                                <td nowrap>&nbsp;&nbsp;</td>
                                <td width="25%">
                                    @dtData.nama_perniagaan
                                </td>
                                <td width="100px">&nbsp;</td>
                                <td nowrap>No Lesen : </td>
                                <td>&nbsp;&nbsp;</td>
                                <td width="25%">
                                    @{
                                        var lesenaccno = @dtData.lesen_acc_no ?? "-";
                                    }
                                    <span>@lesenaccno</span>
                                </td>
                            </tr>
                            <tr height="30px">
                                <td nowrap>Alamat Syarikat : </td>
                                <td nowrap>&nbsp;&nbsp;</td>
                                <td width="25%">
                                    <span>@dtData.alamat_perniagaan</span>
                                </td>
                            </tr>
                            <tr height="30px">
                                <td nowrap>Negeri : </td>
                                <td nowrap>&nbsp;&nbsp;</td>
                                <td width="25%">
                                    <span>@dtData.statename</span>
                                </td>
                                <td width="100px">&nbsp;</td>
                                <td nowrap>Daerah : </td>
                                <td>&nbsp;&nbsp;</td>
                                <td width="25%">
                                    <span>@dtData.districtname</span>
                                </td>
                                <td width="100px">&nbsp;</td>
                                <td nowrap>Bandar : </td>
                                <td>&nbsp;&nbsp;</td>
                                <td width="25%">
                                    <span>@dtData.townname</span>
                                </td>
                            </tr>
                            <tr height="50px">
                                @{
                                    var jenisperniagaan = @dtData.ops_name ?? "-";
                                }
                                <td nowrap>Jenis Perniagaan : </td>
                                <td nowrap>&nbsp;&nbsp;</td>
                                <td width="25%">
                                    <span>@jenisperniagaan</span>
                                </td>
                            </tr>
                            <tr height="30px">
                                @{
                                    string tarikh_mula_isu = dtData.tarikh_mula_isu.HasValue
                                    ? dtData.tarikh_mula_isu.Value.ToString("dd/MM/yyyy")
                                    : "-";

                                    string tarikh_tamat_isu = dtData.tarikh_tamat_isu.HasValue
                                    ? dtData.tarikh_tamat_isu.Value.ToString("dd/MM/yyyy")
                                    : "-";
                                }
                                <td nowrap>Tarikh Mula Isu : </td>
                                <td nowrap>&nbsp;&nbsp;</td>
                                <td width="25%">
                                    <span> @tarikh_mula_isu</span>
                                </td>
                                <td width="100px">&nbsp;</td>
                                <td nowrap>Tarikh Tamat Isu : </td>
                                <td>&nbsp;&nbsp;</td>
                                <td width="25%">
                                    <span>@tarikh_tamat_isu</span>
                                </td>
                                <td width="100px">&nbsp;</td>
                                <td nowrap>Status Lesen : </td>
                                <td>&nbsp;&nbsp;</td>
                                <td width="25%">
                                    @switch (dtData.status_lesen)
                                    {
                                        case "Tiada Data":
                                            <span class='badge priority-warning py-1 px-2' title='@dtData.status_lesen.ToUpper()'>@dtData.status_lesen.ToUpper()</span>
                                            break;

                                        case "Aktif":
                                            <span class='badge priority-info py-1 px-2' title='@dtData.status_lesen.ToUpper()'>@dtData.status_lesen.ToUpper()</span>
                                            break;

                                        case "Tamat Tempoh":
                                            <span class='badge priority-danger py-1 px-2' title='@dtData.status_lesen.ToUpper()'>@dtData.status_lesen.ToUpper()</span>
                                            break;

                                        case "Gantung":
                                            <span class='badge priority-warning py-1 px-2' title='@dtData.status_lesen.ToUpper()'>@dtData.status_lesen.ToUpper()</span>
                                            break;

                                        case "Tidak Berlesen":
                                            <span class='badge priority-danger py-1 px-2' title='@dtData.status_lesen.ToUpper()'>@dtData.status_lesen.ToUpper()</span>
                                            break;

                                        default:
                                            break;
                                    }
                                </td>
                            </tr>
                            <tr height="30px">
                                <td nowrap>Dokumen Sokongan : </td>
                                <td nowrap>&nbsp;&nbsp;</td>
                                <td width="25%">
                                    <span><a href="@dtData.dokumen_sokongan" target="_blank">Klik disini</a></span>
                                </td>
                            </tr>
                            <tr height="30px">
                                <td nowrap> </td>
                                <td nowrap>&nbsp;&nbsp;</td>
                                <td width="25%">
                                    <span><img src="@dtData.g_activity_1" /></span>
                                    <span><img src="@dtData.g_activity_2" /></span>
                                    <span><img src="@dtData.g_activity_3" /></span>
                                </td>
                            </tr>
                        </table>
                    </DxFormLayoutItem>

                    <DxFormLayoutItem ColSpanMd="12"><hr style="padding:0;margin:0;" /></DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="12">
                        <DxButton Click="@(() => Grid.CancelEditAsync())" class="btn-edit-grid" Text="Tutup" />
                    </DxFormLayoutItem>
                </DxFormLayout>
            </EditFormTemplate>
            <CustomValidators>
                <MyCustomValidator DataItemValidating="ValidateGridData" />
            </CustomValidators>

            @*This is to count the summary*@
            <TotalSummary>
                <DxGridSummaryItem FooterColumnName="icno_pemilik"
                                   Name="Custom"
                                   SummaryType=GridSummaryItemType.Count />
            </TotalSummary>

        </DxGrid>
    </div>
</DxLoadingPanel>

<DxPopup @bind-Visible="@ConfirmationShown" HeaderText="Hapus rekod" CssClass="confirmation-header" Width="auto" CloseOnOutsideClick="false">
    <BodyContentTemplate>
        <b>@strSelected</b> --> adalah rekod yang dipilih untuk dihapuskan.
        <br />Anda pasti untuk menghapuskan rekod ini?
        <br /><br />
        <div class="confirm-dialog-buttons">
            <DxButton Text="Ya" RenderStyle="ButtonRenderStyle.Primary" class="confirmation-btn" Click="@OnYesButtonClick" />
            <DxButton Text="Tidak" RenderStyle="ButtonRenderStyle.Secondary" class="confirmation-btn" Click="@OnNoButtonClick" />
        </div>
    </BodyContentTemplate>
</DxPopup>
@* } *@

@code {
    bool PanelVisible { get; set; }
    IEnumerable<mst_licensee_view> dataSource;

    IGrid Grid { get; set; }
    int GridPageIndex { get; set; } = 0;
    string GridSearchText = "";

    bool ConfirmationShown { get; set; } = false;
    string strSelected { get; set; }
    mst_licensee_view dtData { get; set; }

    int ActiveTabIndex;
    private string formType = "Premis";

    TaskCompletionSource<bool> DataLoadedTcs { get; } = new(TaskCreationOptions.RunContinuationsAsynchronously);

    protected override async Task OnInitializedAsync()
    {
        PanelVisible = true;
        //dataSource = await _LicenseService.ListAll();
        dataSource = await GetListDataAsync(formType);
        DataLoadedTcs.TrySetResult(true);
        PanelVisible = false;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await DataLoadedTcs.Task;
            await Grid.CancelEditAsync();
        }
    }

    void ValidateGridData(ValidationMessageStoreEventArgs e)
    {
    }

    async Task Grid_EditModelSaving(GridEditModelSavingEventArgs e)
    {
    }

    async Task UpdateDataAsync()
    {
    }

    public void Dispose()
    {
        DataLoadedTcs.TrySetCanceled();
    }

    async Task Delete(mst_licensee_view item)
    {
        strSelected = item.nama_perniagaan;
        dtData = item;
        ConfirmationShown = true;
    }

    async void OnYesButtonClick()
    {
    }

    void OnNoButtonClick()
    {
        ConfirmationShown = false;
    }

    void Grid_CustomizeSummaryDisplayText(GridCustomizeSummaryDisplayTextEventArgs e)
    {
        if (e.Item.Name == "Custom")
            e.DisplayText = string.Format("Bil. : {0}", e.Value);
    }

    private void HandleResponse(string message, string? status = "Success")
    {
        var RenderStyle = ToastRenderStyle.Success;

        if (status == "Error")
        {
            RenderStyle = ToastRenderStyle.Danger;
        }
        else if (status == "Info")
        {
            RenderStyle = ToastRenderStyle.Info;
        }
        else if (status == "Warning")
        {
            RenderStyle = ToastRenderStyle.Warning;
        }

        ToastService.ShowToast(new ToastOptions()
            {
                ProviderName = "Overview",
                ThemeMode = ToastThemeMode.Saturated,
                RenderStyle = RenderStyle,
                Title = message
            });
    }

    public MarkupString GetStatusLesenIconHtml(string? status)
    {
        string priorytyClass = "";
        string title = "";

        if (status == "Aktif")
        {
            priorytyClass = "info";
            title = " AKTIF ";
        }
        else if (status == "Tamat Tempoh")
        {
            priorytyClass = "danger";
            title = " TAMAT TEMPOH ";
        }
        else if (status == "Gantung")
        {
            priorytyClass = "warning";
            title = " GANTUNG ";
        }
        else if (status == "Tiada Data")
        {
            priorytyClass = "warning";
            title = " TIADA DATA ";
        }
        else if (status == "Tidak Berlesen")
        {
            priorytyClass = "danger";
            title = " TIDAK BERLESEN ";
        }
        string html = string.Format("<span class='badge priority-{0} py-1 px-2' title='{1}'>{1}</span>", priorytyClass,
        title);
        return new MarkupString(html);
    }

    private async Task OnActiveTabIndexChanged(int index)
    {
        ActiveTabIndex = index;

        switch (ActiveTabIndex)
        {
            case 0:
                formType = "Premis";
                break;
            case 1:
                formType = "Lesen";
                break;
            default:
                break;
        }

        dataSource = await GetListDataAsync(formType);
        StateHasChanged();
    }

    private async Task<IEnumerable<mst_licensee_view>> GetListDataAsync(string? formType = "Premis")
    {
        IEnumerable<mst_licensee_view> result;
        if (formType == "Premis")
        {
            result = await _PremisService.ListByTabType(formType);
        }
        else
        {
            result = await _LicenseService.ListByTabType(formType);
        }
        return result;
    }
}
