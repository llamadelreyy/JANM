@page "/unit"
@attribute [AllowAnonymous]

@using System.Globalization
@using Blazored.Toast.Services
@using Newtonsoft.Json
@using System.ComponentModel
@using PBTPro.DAL.Models;
@using PBTPro.DAL.Services
@using PBTPro.Data
@using PBTPro.DAL.Models.CommonServices

@inject UnitService _UnitService
@inject DepartmentService _DepartmentService
@inject SectionService _SectionService
@inject NavigationManager NavigationManager
@inject PBTAuthStateProvider _PBTAuthStateProvider
@inject IToastNotificationService ToastService
@inject IToastService toastService

<style>
    .dxbl-grid {
        height: 98.5%;
        max-height: 98.5%;
    }
</style>

<div class="d-lg-flex border-bottom">
    <div class="col-md-12 py-1 dx-helptitle pageTitle">
        <img class="imgTitle" src="\images\icons-small\hard-hat--arrow.png" />
        <div class="textTitle">Unit</div>
    </div>
</div>

<div class="item-container-x">

    <DxGrid @ref="Grid"
            Data="dataSource"
            KeyFieldName="unit_id"
            ShowGroupPanel="true"
            ShowFilterRow="false"
            TextWrapEnabled="true"
            CustomizeSummaryDisplayText="Grid_CustomizeSummaryDisplayText"
            EditorRenderMode="GridEditorRenderMode.Integrated"
            FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
            ShowSearchBox="true"
            AllowSelectRowByClick="true"
            @bind-SearchText="@GridSearchText"
            PageSize="25"
            @bind-PageIndex="@GridPageIndex"
            PagerPosition="GridPagerPosition.Bottom"
            PagerNavigationMode="PagerNavigationMode.InputBox"
            EditModelSaving="Grid_EditModelSaving"
            EditFormButtonsVisible="false"
            PageSizeSelectorVisible="true"
            PageSizeSelectorItems="@(new int[] { 25, 50, 100 })"
            PageSizeSelectorAllRowsItemVisible="true"
            PagerAutoHideNavButtons="false"
            ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
            GroupFooterDisplayMode="GridGroupFooterDisplayMode.Auto"
            HighlightRowOnHover="true"
            CssClass="mv-1000">

        <Columns>
            <DxGridCommandColumn Width="55px">
                <HeaderTemplate>
                    <a @onclick="@(() => Grid.StartEditNewRowAsync())" style="text-decoration: none;" href="javascript:void(0);"><img src="images/icons/plus-circle.png" /></a>
                </HeaderTemplate>
                <CellDisplayTemplate>
                    <a @onclick="@(() => Grid.StartEditRowAsync(context.VisibleIndex))" style="text-decoration: none; padding:0px 2px;" href="javascript:void(0);"><img src="images/icons-small/table--pencil.png" /></a>
                    <a @onclick="@(() => Delete((unit_info)context.DataItem))" style="text-decoration: none;padding:0px 0px 0px 2px;" href="javascript:void(0);"><img src="images/icons-small/cross-circle-frame.png" /></a>
                </CellDisplayTemplate>
            </DxGridCommandColumn>
            <DxGridDataColumn Caption="Jabatan" MinWidth="120" Width="15%" FieldName="dept_name" />
            <DxGridDataColumn Caption="Seksyen" MinWidth="120" Width="15%" FieldName="section_name" />
            <DxGridDataColumn Caption="Kod" MinWidth="100" Width="13%" FieldName="unit_code" />
            <DxGridDataColumn Caption="Nama" MinWidth="250" Width="20%" FieldName="unit_name" TextAlignment="GridTextAlignment.Left" />
            <DxGridDataColumn Caption="Keterangan" MinWidth="250" Width="25%" FieldName="unit_desc" TextAlignment="GridTextAlignment.Left" />

            <DxGridDataColumn FieldName="created_date"
                              DisplayFormat="dd/MM/yyyy"
                              Caption="Tarikh Data"
                              MinWidth="100"
                              Width="12%"
                              TextAlignment="GridTextAlignment.Center"
                              SortOrder="GridColumnSortOrder.Ascending"
                              SortIndex="0">
                <FilterMenuTemplate>
                    <DateRange FilterContext="context" />
                </FilterMenuTemplate>
            </DxGridDataColumn>
        </Columns>

        <EditFormTemplate Context="EditFormContext">
            @{
                var dtEdit = (unit_info)EditFormContext.EditModel;
            }
            <DxFormLayout CssClass="w-100">
                <DxFormLayoutItem ColSpanMd="6" BeginRow="true">
                    <table class="layout_edit">
                        <tr>
                            <td nowrap>Jabatan</td>
                            <td nowrap>&nbsp;&nbsp;</td>
                            <td width="50%" colspan="6">
                                <DxComboBox Data="@dtDepartment"
                                            NullText="Pilih Jabatan ..."
                                            ShowValidationIcon="true"
                                            FilteringMode="DataGridFilteringMode.Contains"
                                            @bind-Value="@dtEdit.dept_id"
                                            TextFieldName="dept_name"
                                            ValueFieldName="dept_id">
                                </DxComboBox>
                            </td>
                        </tr>
                        <tr>
                            <td nowrap>Seksyen</td>
                            <td nowrap>&nbsp;&nbsp;</td>
                            <td width="50%" colspan="6">
                                @{
                                    var intDepartmentID = dtDepartment.Where(c => c.dept_id == dtEdit.dept_id).FirstOrDefault().dept_id;
                                    var SectionData = dtSection.Where(x => x.dept_id == intDepartmentID);
                                }
                                <DxComboBox Data="@SectionData"
                                            NullText="Pilih Seksyen ..."
                                            ShowValidationIcon="true"
                                            FilteringMode="DataGridFilteringMode.Contains" s
                                            @bind-Value="@dtEdit.section_id"
                                            TextFieldName="section_name"
                                            ValueFieldName="section_id">
                                </DxComboBox>
                            </td>
                        </tr>
                        <tr>
                            <td nowrap>Kod</td>
                            <td nowrap>&nbsp;&nbsp;</td>
                            <td width="50%">
                                <DxTextBox @bind-Text="@dtEdit.unit_code"
                                           ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                           BindValueMode="BindValueMode.OnInput"
                                           NullText="Masukkan kod unit ..."
                                           Maxlength="10"
                                           ShowValidationIcon="true"
                                           CssClass="cw-320" />
                            </td>
                            <td width="100px">&nbsp;</td>
                            <td nowrap></td>
                            <td>&nbsp;&nbsp;</td>
                            <td width="50%"></td>
                        </tr>
                        <tr>
                            <td nowrap>Nama</td>
                            <td nowrap>&nbsp;&nbsp;</td>
                            <td width="50%" colspan="6">
                                <DxTextBox @bind-Text="@dtEdit.unit_name"
                                           ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                           BindValueMode="BindValueMode.OnInput"
                                           NullText="Masukkan nama unit ..."
                                           Maxlength="60"
                                           ShowValidationIcon="true"
                                           CssClass="cw-320" />
                            </td>
                        </tr>
                        <tr>
                            <td nowrap>Keterangan</td>
                            <td nowrap>&nbsp;&nbsp;</td>
                            <td width="50%" colspan="6">
                                <DxTextBox @bind-Text="@dtEdit.unit_desc"
                                           ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                           BindValueMode="BindValueMode.OnInput"
                                           NullText="Masukkan keterangan ..."
                                           Maxlength="120"
                                           ShowValidationIcon="true"
                                           CssClass="cw-320" />
                            </td>
                        </tr>
                    </table>
                </DxFormLayoutItem>
                <DxFormLayoutItem ColSpanMd="12"><hr style="padding:0;margin:0;" /></DxFormLayoutItem>
                <DxFormLayoutItem ColSpanMd="12">
                    <DxButton SubmitFormOnClick="true" class="btn-edit-grid" Text="Simpan" />
                    <DxButton Click="@(() => Grid.CancelEditAsync())" class="btn-edit-grid" Text="Batal" />
                </DxFormLayoutItem>
            </DxFormLayout>
        </EditFormTemplate>
        <CustomValidators>
            <MyCustomValidator DataItemValidating="ValidateGridData" />
        </CustomValidators>

        
        <TotalSummary>
            <DxGridSummaryItem FooterColumnName="unit_code"
                               Name="Custom"
                               SummaryType=GridSummaryItemType.Count />
        </TotalSummary>

    </DxGrid>
</div>

<DxPopup @bind-Visible="@ConfirmationShown" HeaderText="Hapus rekod" CssClass="confirmation-header" Width="auto" CloseOnOutsideClick="false">
    <BodyContentTemplate>
        <b>@strSelected</b> --> adalah rekod yang dipilih untuk dihapuskan.
        <br />Anda pasti untuk menghapuskan rekod ini?
        <br /><br />
        <div class="confirm-dialog-buttons">
            <DxButton Text="Ya" RenderStyle="ButtonRenderStyle.Primary" class="confirmation-btn" Click="@OnYesButtonClick" />
            <DxButton Text="Tidak" RenderStyle="ButtonRenderStyle.Secondary" class="confirmation-btn" Click="@OnNoButtonClick" />
        </div>
    </BodyContentTemplate>
</DxPopup>


@code {
    IEnumerable<department_info> dtDepartment;
    IEnumerable<section_info> dtSection;
    IEnumerable<unit_info> dataSource;

    IGrid Grid { get; set; }
    int GridPageIndex { get; set; } = 0;
    string GridSearchText = "";

    bool ConfirmationShown { get; set; } = false;
    string strSelected { get; set; }
    unit_info dtData { get; set; }

    TaskCompletionSource<bool> DataLoadedTcs { get; } = new(TaskCreationOptions.RunContinuationsAsynchronously);

    protected override async Task OnInitializedAsync()
    {
        dataSource = await _UnitService.ListAll();
        dtDepartment = await _DepartmentService.ListAll();
        dtSection = await _SectionService.ListAll();

        DataLoadedTcs.TrySetResult(true);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await DataLoadedTcs.Task;
            await Grid.CancelEditAsync(); //.StartEditRowAsync(0);
        }
    }

    void ValidateGridData(ValidationMessageStoreEventArgs e)
    {
        var _data = (unit_info)e.EditModel;
        if (_data.unit_name == null || _data.unit_name.Trim() == "")
        {
            e.AddError(nameof(_data.unit_name), "!!!!!!. Medan perlu diisi.");
        }
    }

    async Task Grid_EditModelSaving(GridEditModelSavingEventArgs e)
    {
        // bool blnSuccess = false;
        // string strMessage = "";
        // if (e.IsNew)
        // {
        //     var jsonString = JsonConvert.SerializeObject((unit_info)e.EditModel);
        //     blnSuccess = await _UnitService.Add(jsonString) > 0 ? true : false;
        //     strMessage = "Proses tambah rekod selesai.";
        // }
        // else
        // {
        //     blnSuccess = await _UnitService.Update((unit_info)e.EditModel) > 0 ? true : false;
        //     strMessage = "Proses kemaskini selesai.";
        // }

        // if (blnSuccess)
        //     await UpdateDataAsync();

        // ShowToast(blnSuccess, blnSuccess ? strMessage : "Ralat telah berlaku! Sila hubungi pentadbir sistem.");

        ReturnViewModel response = new ReturnViewModel();
        bool blnSuccess = false;
        var editModel = e.EditModel as unit_info;
        try
        {
            if (e.IsNew)
            {
                response = await _UnitService.Add(editModel);
                blnSuccess = true;
            }
            else
            {
                response = await _UnitService.Update(editModel.unit_id, editModel);
                blnSuccess = true;
            }
            if (blnSuccess)
            {
                await UpdateDataAsync();
                toastService.ShowInfo("Proses kemaskini selesai.");
            }
            else
            {
               toastService.ShowError("Ralat telah berlaku! Sila hubungi pentadbir sistem.");
            }
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"An error occurred while saving the edit model: {ex.Message}");
        }
    }

    async Task UpdateDataAsync()
    {
        //Refresh back the data source
        dataSource = await _UnitService.Refresh();
    }

    public void Dispose()
    {
        DataLoadedTcs.TrySetCanceled();
    }

    async Task Delete(unit_info item)
    {
        strSelected = item.unit_name;
        dtData = item;
        ConfirmationShown = true;
    }

    async void OnYesButtonClick()
    {
        try
        {
            ReturnViewModel response = new ReturnViewModel();
            response = await _UnitService.Delete(dtData.unit_id);

            if (response.ReturnCode == 200)
            {
                await UpdateDataAsync();
                ConfirmationShown = false;
                StateHasChanged();
                HandleResponse(response.ReturnMessage);
            }
            else
            {
                ConfirmationShown = false;
                HandleResponse(response.ReturnMessage, "Error");
            }
        }
        catch (Exception ex)
        {
        }
        // bool blnSuccess = false;
        // if (dtData != null)
        // {
        //     blnSuccess = await _UnitService.Delete(dtData.unit_id);
        //     if (blnSuccess) await UpdateDataAsync();
        // }

        // ConfirmationShown = false;
        // ShowToast(blnSuccess, blnSuccess ? "Proses hapus selesai" : "Ralat telah berlaku! Sila hubungi pentadbir sistem.");
    }

    void OnNoButtonClick()
    {
        ConfirmationShown = false;
    }

    void Grid_CustomizeSummaryDisplayText(GridCustomizeSummaryDisplayTextEventArgs e)
    {
        if (e.Item.Name == "Custom")
            e.DisplayText = string.Format("Bil. : {0}", e.Value);
    }

    void ShowToast(bool blnStatus, string strMessage)
    {
        ToastService.ShowToast(new ToastOptions()
            {
                ProviderName = "Overview",
                ThemeMode = ToastThemeMode.Saturated,
                RenderStyle = blnStatus ? ToastRenderStyle.Success : ToastRenderStyle.Danger,
                Title = strMessage
            });
    }
     #region response
    


    private void HandleResponse(string message, string? status = "Success")
    {
        var RenderStyle = ToastRenderStyle.Success;

        if (status == "Error")
        {
            RenderStyle = ToastRenderStyle.Danger;
        }
        else if (status == "Info")
        {
            RenderStyle = ToastRenderStyle.Info;
        }
        else if (status == "Warning")
        {
            RenderStyle = ToastRenderStyle.Warning;
        }

        ToastService.ShowToast(new ToastOptions()
            {
                ProviderName = "Overview",
                ThemeMode = ToastThemeMode.Saturated,
                RenderStyle = RenderStyle,
                Title = message
            });
    }
    #endregion
}