@page "/reset_password"
@attribute [AllowAnonymous]
@using PBTPro.DAL.Services
@using PBTPro.Data
@using PBTPro.DAL.Models.CommonServices
@inject PBTAuthUserService PBTAuthUserService
@inject NavigationManager NavigationManager
@inject IToastNotificationService ToastService

<div class="item-container-x">
    <EditForm Model="@InputModel" OnValidSubmit="@HandleValidSubmit" Context="EditFormContext">
        <DataAnnotationsValidator />
        <DxFormLayout>
            <DxFormLayoutItem Caption="Nama Pengguna:" ColSpanMd="12">
                <DxTextBox @bind-Text="@InputModel.username"
                            NullText="Nama Pengguna ..."
                            ShowValidationIcon="true"
                            ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" />
            </DxFormLayoutItem>

            <DxFormLayoutItem Caption="Kata Laluan:" ColSpanMd="12">
                <DxTextBox @bind-Text="@InputModel.new_password"
                            NullText="Kata Laluan ..."
                            ShowValidationIcon="true" 
                            Password="true" 
                            ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" />
            </DxFormLayoutItem>

            <DxFormLayoutItem Caption="Kata Laluan:" ColSpanMd="12">
                <DxTextBox @bind-Text="@InputModel.valid_new_password"
                           NullText="Sahkan Kata Laluan ..."
                           ShowValidationIcon="true"
                           Password="true"
                           ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto" />
            </DxFormLayoutItem>

            <DxFormLayoutItem ColSpanMd="12">
                <DxButton CssClass="w-100" Text="Log Masuk" style="height:40px;border-radius: 3px; border-color:transparent;background-color:green"
                            RenderStyle="ButtonRenderStyle.Primary"
                            Enabled="true"
                            SubmitFormOnClick="true">
                </DxButton>
            </DxFormLayoutItem>
        </DxFormLayout>
    </EditForm>
</div>
}

@code {
    public ResetPasswordInput InputModel = new ResetPasswordInput();
    string FormSubmitResult = "";
    private string testToken = "dummyToken";

    protected override void OnInitialized()
    {
        InputModel.reset_token = "";
        var uri = NavigationManager.Uri;
        var queryParams = new Uri(uri).Query;

        var queryCollection = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(queryParams);
        if (queryCollection.TryGetValue("token", out var tokenParam))
        {
            InputModel.reset_token = tokenParam.ToString();
        }
    }

    public async Task HandleValidSubmit()
    {
        ReturnViewModel response = new ReturnViewModel();

        response = await PBTAuthUserService.ResetPasswordAsync(InputModel);

        if (response.ReturnCode == 200)
        {
            HandleResponse(response.ReturnMessage, "Success");
            NavigationManager.NavigateTo("login", true);
        }
        else
        {
            HandleResponse(response.ReturnMessage, "Error");
        }
    }

    private void HandleResponse(string message, string? status = "Success")
    {
        var RenderStyle = ToastRenderStyle.Success;

        if (status == "Error")
        {
            RenderStyle = ToastRenderStyle.Danger;
        }
        else if (status == "Info")
        {
            RenderStyle = ToastRenderStyle.Info;
        }
        else if (status == "Warning")
        {
            RenderStyle = ToastRenderStyle.Warning;
        }

        ToastService.ShowToast(new ToastOptions()
            {
                ProviderName = "Overview",
                ThemeMode = ToastThemeMode.Saturated,
                RenderStyle = RenderStyle,
                Title = message
            });
    }

}