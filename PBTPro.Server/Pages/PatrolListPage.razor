@page "/senarai_rondaan"
@attribute [Authorize(Roles = "Administrator")]

@implements IDisposable

@using System.Globalization
@using Blazored.Toast.Services
@using Newtonsoft.Json
@using System.ComponentModel
@using PBTPro.DAL.Models
@using PBTPro.Data
@using PBTPro.DAL.Models.CommonServices
@using PBTPro.DAL.Services
@using PBTPro.DAL.Models.PayLoads


@inject UserProfileService _UserProfileService
@inject ScheduleService _ScheduleService
@inject UserService _UserService
@inject TownService _TownService
@inject DistrictService _DistrictService

@inject NavigationManager NavigationManager
@inject IToastService toastService
@inject PBTAuthStateProvider _PBTAuthStateProvider
@inject IToastNotificationService ToastService

<style>
    .dxbl-grid {
        height: 82.5vh;
        max-height: 82.5vh;
    }
</style>

<DxLoadingPanel @bind-Visible="PanelVisible"
                IsContentBlocked="true"
                ApplyBackgroundShading="true"
                IndicatorAreaVisible="false"
                Text="Capaian Data...">

    <div class="d-lg-flex border-bottom">
        <div class="col-md-12 py-1 dx-helptitle pageTitle">
            <img class="imgTitle" src="/images/icons-small/table-heatmap.png" />
            <div class="textTitle">Rondaan - Senarai Jadual Rondaan</div>
        </div>
    </div>

    <div class="item-container-x" style="padding-top:2px;">
        <DxTabs ActiveTabIndex="@ActiveTabIndex" ActiveTabIndexChanged="@OnActiveTabIndexChanged" TabsPosition="TabsPosition.Top" RenderMode="TabsRenderMode.Default">
            @{
                var belummula = $"Belum Mula ({result})";
                var rondaan = $"Rondaan ({result1})";
                var selesai = $"Selesai ({result2})";

                <DxTab Text="@belummula"></DxTab>
                <DxTab Text="@rondaan"></DxTab>
                <DxTab Text="@selesai"></DxTab>
            }
        </DxTabs>
        <DxGrid @ref="Grid"
                Data="@dataSchedule"
                KeyFieldName="scheduleId"
                ShowGroupPanel="true"
                ShowFilterRow="false"
                TextWrapEnabled="true"
                EditorRenderMode="GridEditorRenderMode.Integrated"
                FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
                ShowSearchBox="true"
                AllowSelectRowByClick="true"
                @bind-SearchText="@GridSearchText"
                PageSize="25"
                @bind-PageIndex="@GridPageIndex"
                PagerPosition="GridPagerPosition.Bottom"
                PagerNavigationMode="PagerNavigationMode.InputBox"
                EditModelSaving="Grid_EditModelSaving"
                EditFormButtonsVisible="false"
                PageSizeSelectorVisible="true"
                PageSizeSelectorItems="@(new int[] { 25, 50, 100 })"
                PageSizeSelectorAllRowsItemVisible="true"
                PagerAutoHideNavButtons="false"
                ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
                GroupFooterDisplayMode="GridGroupFooterDisplayMode.Auto"
                HighlightRowOnHover="true"
                CssClass="mv-1000">

            <Columns>
                <DxGridCommandColumn Width="55px">
                    <HeaderTemplate>
                        <a @onclick="@(() => Grid.StartEditNewRowAsync())" style="text-decoration: none;" href="javascript:void(0);"><img src="images/icons/plus-circle.png" /></a>
                    </HeaderTemplate>
                    <CellDisplayTemplate>
                        <a @onclick="@(() => Grid.StartEditRowAsync(context.VisibleIndex))" style="text-decoration: none; padding:0px 2px;" href="javascript:void(0);"><img src="images/icons-small/table--pencil.png" /></a>
                        <a @onclick="@(() => Delete((PatrolViewModel)context.DataItem))" style="text-decoration: none;padding:0px 0px 0px 2px;" href="javascript:void(0);"><img src="images/icons-small/cross-circle-frame.png" /></a>
                    </CellDisplayTemplate>
                </DxGridCommandColumn>
                <DxGridDataColumn Caption="Pegawai" MinWidth="100" Width="20%" FieldName="OfficerName" TextAlignment="GridTextAlignment.Left">
                    <CellDisplayTemplate>
                        <div>
                            @CombineTextPegawai(((PatrolViewModel)context.DataItem).OfficerName, ((PatrolViewModel)context.DataItem).DeptName, ((PatrolViewModel)context.DataItem).SectionName, ((PatrolViewModel)context.DataItem).UnitName)
                        </div>
                    </CellDisplayTemplate>
                </DxGridDataColumn>
                <DxGridDataColumn Caption="Lokasi" MinWidth="120" Width="15%" FieldName="DistrictName" />
                <DxGridDataColumn Caption="Rondaan Mula" MinWidth="200" Width="30%" FieldName="StartTime" TextAlignment="GridTextAlignment.Left" AllowGroup="false">
                    <CellDisplayTemplate>
                        <div>
                            @CombineTextStartPatrol(Convert.ToDateTime(((PatrolViewModel)context.DataItem).StartTime), Convert.ToDateTime(((PatrolViewModel)context.DataItem).StartTime))
                        </div>
                    </CellDisplayTemplate>
                </DxGridDataColumn>
                <DxGridDataColumn Caption="Rondaan Tamat" MinWidth="200" Width="30%" FieldName="EndTime" TextAlignment="GridTextAlignment.Left" AllowGroup="false">
                    <CellDisplayTemplate>
                        <div>
                            @CombineTextEndPatrol(Convert.ToDateTime(((PatrolViewModel)context.DataItem).EndTime), Convert.ToDateTime(((PatrolViewModel)context.DataItem).EndTime))
                        </div>
                    </CellDisplayTemplate>
                </DxGridDataColumn>
                <DxGridDataColumn FieldName="PatrolStatus" Caption="Status" Width="12%" TextAlignment="GridTextAlignment.Center" AllowGroup="false">
                    <CellDisplayTemplate>
                        <div>@GetStatusRondaanIconHtml(((PatrolViewModel)context.DataItem).PatrolStatus)</div>
                    </CellDisplayTemplate>
                </DxGridDataColumn>
                <DxGridDataColumn FieldName="CreatedAt"
                                  DisplayFormat="dd/MM/yyyy"
                                  Caption="Tarikh Data"
                                  MinWidth="100"
                                  Width="12%"
                                  TextAlignment="GridTextAlignment.Center"
                                  SortOrder="GridColumnSortOrder.Ascending"
                                  SortIndex="0">
                    <FilterMenuTemplate>
                        <DateRange FilterContext="context" />
                    </FilterMenuTemplate>
                </DxGridDataColumn>
            </Columns>

            <EditFormTemplate Context="EditFormContext">
                @{
                    var dtEdit = (PatrolViewModel)EditFormContext.EditModel;
                    // This is to check whether in add new @ edit mode
                    boolLockDropDown = Grid.IsEditingNewRow();
                }
                <DxFormLayout CssClass="w-100">
                    <DxFormLayoutItem ColSpanMd="6" BeginRow="true">
                        <table class="">
                            <tr>
                                <td nowrap>Nama Pegawai</td>
                                <td nowrap>&nbsp;&nbsp;</td>
                                <td width="50%">
                                    <DxComboBox Data="@dataUser"
                                                NullText="Pilih nama pegawai ..."
                                                ShowValidationIcon="true"
                                                SearchMode="ListSearchMode.AutoSearch"
                                                Enabled="@boolLockDropDown"
                                                ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                TextFieldName="@nameof(ApplicationUser.TextName)"
                                                ValueFieldName="IdNo"
                                                CssClass="combo-width"
                                                SelectedItemChanged="@((ApplicationUser x) => SelectedItemChanged(x))"
                                                DropDownWidthMode="DropDownWidthMode.ContentOrEditorWidth"
                                                @bind-Value="@dtEdit.ICNo"
                                                @bind-Text="@dtEdit.OfficerName">
                                    </DxComboBox>
                                </td>
                                <td width="100px">&nbsp;</td>
                                <td nowrap></td>
                                <td>&nbsp;&nbsp;</td>
                                <td width="50%"></td>
                            </tr>
                            <tr>
                                <td nowrap>Jabatan</td>
                                <td nowrap>&nbsp;&nbsp;</td>
                                <td width="50%">
                                    <DxTextBox @bind-Text="@_itm.DeptName"
                                               @bind-Value="@dtEdit.DeptId"
                                               NullText="Jabatan pengguna ..."
                                               BindValueMode="BindValueMode.OnInput"
                                               Style="width: 320px;"
                                               Enabled="false" />
                                </td>
                            </tr>
                            <tr>
                                <td nowrap>Seksyen</td>
                                <td nowrap>&nbsp;&nbsp;</td>
                                <td width="50%">
                                    <DxTextBox @bind-Text="@_itm.UnitName"
                                               @bind-Value="@dtEdit.SectionId"
                                               NullText="Seksyen pengguna ..."
                                               BindValueMode="BindValueMode.OnInput"
                                               Style="width: 320px;"
                                               Enabled="false" />
                                </td>
                            </tr>
                            <tr>
                                <td nowrap>Unit</td>
                                <td nowrap>&nbsp;&nbsp;</td>
                                <td width="50%">
                                    <DxTextBox @bind-Text="@_itm.UnitName"
                                               @bind-Value="@dtEdit.UnitId"
                                               NullText="Unit pengguna ..."
                                               BindValueMode="BindValueMode.OnInput"
                                               Style="width: 320px;"
                                               Enabled="false" />
                                </td>
                            </tr>
                            <tr>
                                <td nowrap>Daerah</td>
                                <td nowrap>&nbsp;&nbsp;</td>
                                <td width="50%" colspan="6">                                          
                                    <DxComboBox Data="@dtDistrict"
                                                NullText="Pilih Daerah ..."
                                                ShowValidationIcon="true"
                                                FilteringMode="DataGridFilteringMode.Contains"
                                                @bind-Value="@dtEdit.DistrictCode"
                                                @bind-Text="@dtEdit.DistrictName"
                                                TextFieldName="district_name"
                                                ValueFieldName="district_code" style="width:300px">
                                    </DxComboBox>
                                </td>
                            </tr>
                            <tr>
                                <td nowrap>Bandar</td>
                                <td nowrap>&nbsp;&nbsp;</td>
                                <td width="50%" colspan="6">
                                    @{
                                        var strDistrict = dtDistrict.Where(c => c.district_code == dtEdit.DistrictCode).FirstOrDefault()?.district_code;
                                        var TownData = dtTown.Where(x => x.district_code == strDistrict);
                                    }
                                    <DxComboBox Data="@TownData"
                                                NullText="Pilih Bandar ..."
                                                ShowValidationIcon="true"
                                                FilteringMode="DataGridFilteringMode.Contains"
                                                @bind-Value="@dtEdit.TownId"
                                                @bind-Text="@dtEdit.TownName"
                                                TextFieldName="town_name"
                                                ValueFieldName="town_code" style="width:300px">
                                    </DxComboBox>
                                </td>
                            </tr>                            
                            <tr>
                                <td nowrap>Masa Mula Rondaan</td>
                                <td>&nbsp;&nbsp;</td>
                                <td width="50%">
                                    <DxDateEdit @bind-Date="@dtEdit.StartTime"
                                                NullValue="@DateTimeValue"
                                                NullText="@DateTimeValue.ToString()"
                                                TimeSectionVisible="true"
                                                CssClass="cw-320" />
                                </td>
                                <td width="100px">&nbsp;</td>
                                <td nowrap></td>
                                <td>&nbsp;&nbsp;</td>
                                <td width="50%"></td>
                            </tr>
                            <tr>
                                <td nowrap>Masa Tamat Rondaan</td>
                                <td>&nbsp;&nbsp;</td>
                                <td width="50%">
                                    <DxDateEdit @bind-Date="@dtEdit.EndTime"
                                                NullValue="@DateTimeValue"
                                                NullText ="@DateTimeValue.ToString()"
                                                TimeSectionVisible="true"
                                                CssClass="cw-320" />
                                </td>
                                <td width="100px">&nbsp;</td>
                                <td nowrap></td>
                                <td>&nbsp;&nbsp;</td>
                                <td width="50%"></td>
                            </tr>

                        </table>
                    </DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="12"><hr style="padding:0;margin:0;" /></DxFormLayoutItem>
                    <DxFormLayoutItem ColSpanMd="12">
                        <DxButton SubmitFormOnClick="true" class="btn-edit-grid" Text="Simpan" />
                        <DxButton Click="@(() => Grid.CancelEditAsync())" class="btn-edit-grid" Text="Batal" />
                    </DxFormLayoutItem>
                </DxFormLayout>
            </EditFormTemplate>
        </DxGrid>

    </div>
</DxLoadingPanel>

<DxPopup @bind-Visible="@ConfirmationShown" HeaderText="Hapus rekod" Width="auto" CloseOnOutsideClick="false">
    <BodyContentTemplate>
        Anda pasti untuk menghapuskan rekod ini?
        <br /><br />
        <div class="confirm-dialog-buttons">
            <DxButton Text="Ya" RenderStyle="ButtonRenderStyle.Primary" Click="@OnYesButtonClick" />
            <DxButton Text="Tidak" RenderStyle="ButtonRenderStyle.Secondary" Click="@OnNoButtonClick" />
        </div>
    </BodyContentTemplate>
</DxPopup>

@code {
    bool PanelVisible { get; set; }

    IEnumerable<ref_department> dtDepartment;
    IEnumerable<mst_patrol_schedule> dataSource;
    IEnumerable<ApplicationUser> dataUser;
    IEnumerable<ApplicationUser> valueUser;
    IEnumerable<PatrolViewModel> dataSchedule;
    PatrolViewModel dtData { get; set; }
    mst_patrol_schedule dtPatrolData { get; set; }
    user_profile_view userInfo = new user_profile_view();
    PatrolViewModel _itm = new PatrolViewModel();
    IEnumerable<mst_district> dtDistrict;
    IEnumerable<mst_town> dtTown;

    DateTime DateTimeValue { get; set; } = DateTime.Now;

    IGrid Grid { get; set; }
    int GridPageIndex { get; set; } = 0;
    string GridSearchText = "";

    bool ConfirmationShown { get; set; } = false;
    string strSelected { get; set; } = "";

    bool boolLockDropDown { get; set; } = false;

    GridColumnResizeMode ColumnResizeMode { get; set; } = GridColumnResizeMode.ColumnsContainer;
    TaskCompletionSource<bool> DataLoadedTcs { get; } = new(TaskCreationOptions.RunContinuationsAsynchronously);

    private string tabType = "Belum Mula";
    int ActiveTabIndex;
    int result; int result1; int result2;

    #region List
    protected override async Task OnInitializedAsync()
    {
        PanelVisible = true;
        dataSource = await _ScheduleService.ListAll();
        dataUser = await _UserService.ListAll();
        dataSchedule = await _ScheduleService.ListsAll();
        dtTown = await _TownService.ListAll();
        dtDistrict = await _DistrictService.ListAll();

        DataLoadedTcs.TrySetResult(true);
        PanelVisible = false;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await DataLoadedTcs.Task;
            await Grid.CancelEditAsync();
        }
    }

    private async Task OnActiveTabIndexChanged(int index)
    {
        ActiveTabIndex = index;
        switch (ActiveTabIndex)
        {
            case 0:
                tabType = "Belum Mula";
                break;
            case 1:
                tabType = "Rondaan";
                break;
            case 2:
                tabType = "Selesai";
                break;
            default:
                tabType = "Belum Mula";
                break;
        }

        //DataSource = await GetListDataAsync(tabType);
        StateHasChanged();
    }

    // private async Task<IEnumerable<PatrolViewModel>> GetListDataAsync(string? TabType = "")
    // {
    //     return await _ScheduleService.ListByTabType(tabType);
    // }

    async Task UpdateDataAsync()
    {
        dataSource = await _ScheduleService.Refresh();
    }

    #endregion

    #region add/edit/delete
    async Task Grid_EditModelSaving(GridEditModelSavingEventArgs e)
    {
        ReturnViewModel response = new ReturnViewModel();
        var editModel = e.EditModel as PatrolViewModel;

        try
        {
            if (e.IsNew)
            {
                editModel.DeptId = _itm.DeptId;
                editModel.DeptName = _itm.DeptName;

                editModel.UnitId = _itm.UnitId;
                editModel.UnitName = _itm.UnitName;

                editModel.SectionId = _itm.SectionId;
                editModel.SectionName = _itm.SectionName;

                editModel.OfficerName = _itm.OfficerName;
                editModel.PatrolStatus = "Menunggu";

                editModel.DistrictName = _itm.DistrictName;

                editModel.CreatedAt = DateTime.Now;

                response = await _ScheduleService.Add(editModel);
            }
            else
            {
                response = await _ScheduleService.Update(editModel);
            }

            if (response.ReturnCode == 200)
            {
                await UpdateDataAsync();
                HandleResponse("Proses kemaskini selesai.");
            }
            else
            {
                HandleResponse(response.ReturnMessage, "Error");
            }
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"An error occurred while saving the edit model: {ex.Message}");
        }
    }

    async Task Delete(PatrolViewModel item)
    {
        strSelected = item.OfficerName;
        dtData = item;
        ConfirmationShown = true;

    }

    async void OnYesButtonClick()
    {
        try
        {
            ReturnViewModel response = new ReturnViewModel();
            response = await _ScheduleService.Delete(dtData.scheduleId);

            if (response.ReturnCode == 200)
            {
                await UpdateDataAsync();
                ConfirmationShown = false;
                StateHasChanged();
                HandleResponse(response.ReturnMessage);
            }
            else
            {
                ConfirmationShown = false;
                HandleResponse(response.ReturnMessage, "Error");
            }
        }
        catch (Exception ex)
        {
        }
        dtData = null;
    }

    void OnNoButtonClick()
    {
        dtData = null;
        ConfirmationShown = false;
    }

    #endregion

    #region MarkupString
    public MarkupString GetStatusRondaanIconHtml(string status)
    {
        string priorytyClass = "";
        string title = "";

        if (status == "Selesai")
        {
            priorytyClass = "info";
            title = " SELESAI ";
        }
        else if (status == "Rondaan")
        {
            priorytyClass = "warning";
            title = " RONDAAN ";
        }
        else
        {
            priorytyClass = "danger";
            title = " BELUM MULA ";
        }

        string html = string.Format("<span class='badge priority-{0} py-1 px-2' title='{1}'>{1}</span>", priorytyClass, title);
        return new MarkupString(html);
    }

    public MarkupString CombineTextStartPatrol(DateTime startDtm, DateTime startTm)
    {
        string html = string.Format("<b>TARIKH:</b> {0} <br/> <b>MASA:</b> {1}", startDtm.ToString("dd/MM/yyyy"), startTm.ToString("HH:mm tt"));
        return new MarkupString(html);
    }

    public MarkupString CombineTextEndPatrol(DateTime EndDtm, DateTime EndTm)
    {
        string html = string.Format("<b>TARIKH:</b> {0} <br/> <b>MASA:</b> {1} ", EndDtm.ToString("dd/MM/yyyy"),  EndTm.ToString("HH:mm tt"));
        return new MarkupString(html);
    }

    public MarkupString CombineTextPegawai(string strNama, string strjabatan, string strSeksyen, string strUnit)
    {
        string html = string.Format("<b>{0}</b> <br/> {1} <br/>({2} - {3})", strNama.ToUpper(), strjabatan.ToUpper(), strSeksyen.ToUpper(), strUnit.ToUpper());
        return new MarkupString(html);
    }
    #endregion

    #region response
    public void Dispose()
    {
        DataLoadedTcs.TrySetCanceled();
    }

    private void HandleResponse(string message, string? status = "Success")
    {
        var RenderStyle = ToastRenderStyle.Success;

        if (status == "Error")
        {
            RenderStyle = ToastRenderStyle.Danger;
        }
        else if (status == "Info")
        {
            RenderStyle = ToastRenderStyle.Info;
        }
        else if (status == "Warning")
        {
            RenderStyle = ToastRenderStyle.Warning;
        }

        ToastService.ShowToast(new ToastOptions()
            {
                ProviderName = "Overview",
                ThemeMode = ToastThemeMode.Saturated,
                RenderStyle = RenderStyle,
                Title = message
            });
    }
    #endregion

    async void SelectedItemChanged(ApplicationUser x)
    {
        if (x != null)
        {
            userInfo = await _UserService.RetrievebyIc(x.IdNo);
            if (userInfo != null)
            {
                _itm.DeptName = userInfo.dept_name;
                _itm.SectionName = userInfo.div_name;
                _itm.UnitName = userInfo.unit_name;
                _itm.DeptId = (int)userInfo.dept_id;
                _itm.SectionId = (int)userInfo.div_id;
                _itm.UnitId = (int)userInfo.unit_id;
                _itm.OfficerName = userInfo.full_name;

                StateHasChanged();
            }
        }
    }

}
